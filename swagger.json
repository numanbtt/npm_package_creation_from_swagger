{
  "openapi": "3.0.1",
  "info": {
    "title": "Advancer",
    "version": "1.0.104"
  },
  "servers": [
    {
      "url": "/",
      "description": "Localhost"
    },
    {
      "url": "https://api.advancerenglish.com/",
      "description": "Live Production API"
    },
    {
      "url": "https://advancer.ml/",
      "description": "Live Staging API"
    }
  ],
  "paths": {
    "/api/Administrator/Login": {
      "post": {
        "tags": [
          "Administrator"
        ],
        "summary": "Sistem yöneticilerinin giriş yapabilmesini sağlar.",
        "operationId": "AdminLogin",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Administrator.Commands.LoginCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/AdministratorAdministration/List": {
      "get": {
        "tags": [
          "AdministratorAdministration"
        ],
        "summary": "Sistem yöneticilerini listelemeyi sağlar",
        "operationId": "ListAdministrators",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemPerPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchKeyword",
            "in": "query",
            "description": "Admin listesinde arama yapılacak kelimeyi barındırır",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdministratorAdministration.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AdministratorAdministration/CreateAdministrator": {
      "post": {
        "tags": [
          "AdministratorAdministration"
        ],
        "summary": "Sistem yöneticisi eklemeyi sağlar",
        "operationId": "CreateAdministrator",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EMail",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdministratorAdministration.Commands.CreateAdministratorCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AdministratorAdministration/ChangeAdministratorEmail": {
      "post": {
        "tags": [
          "AdministratorAdministration"
        ],
        "summary": "Sistem yöneticisinin email adresini değiştirmeyi sağlar",
        "operationId": "ChangeAdministratorEmail",
        "parameters": [
          {
            "name": "AdministratorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdministratorEmail",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AdministratorAdministration/ChangeAdministratorPassword": {
      "post": {
        "tags": [
          "AdministratorAdministration"
        ],
        "summary": "Sistem yöneticisinin şifresini değiştirmeyi sağlar",
        "operationId": "ChangeAdministratorPassword",
        "parameters": [
          {
            "name": "AdministratorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "AdministratorPassword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AdministratorAdministration/DeleteAdministrator": {
      "post": {
        "tags": [
          "AdministratorAdministration"
        ],
        "summary": "Sistem yöneticisi silmeyi sağlar",
        "operationId": "DeleteAdministrator",
        "parameters": [
          {
            "name": "AdministratorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Alive": {
      "get": {
        "tags": [
          "Alive"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/AllAccounts/LostPassword": {
      "post": {
        "tags": [
          "AllAccounts"
        ],
        "summary": "Misafir kullanıcının unuttuğu şifresini yenileyebilmesini sağlar. Dikkat: Sosyal medya girişlerinde bu metodun çalışmaması gerekir.",
        "operationId": "LostPassword",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/AllAccounts/RecoverPassword": {
      "post": {
        "tags": [
          "AllAccounts"
        ],
        "summary": "Hesap şifresinin kurtarılmasını sağlar.",
        "operationId": "RecoverPassword",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RecoverCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NewPassword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllAccounts.Commands.RecoverPasswordCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/AllAccounts/ChangeMyPassword": {
      "post": {
        "tags": [
          "AllAccounts"
        ],
        "summary": "Giriş yapmış hesabın şifresini değiştirmesini sağlar.",
        "operationId": "ChangePassword",
        "parameters": [
          {
            "name": "NewPassword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin,Admin,Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AllAccounts/LoginResult": {
      "get": {
        "tags": [
          "AllAccounts"
        ],
        "summary": "Sosyal hesaplar ile giriş yapıldığında, kullanıcı browser'ının dönüş yaptığı url'dir.",
        "operationId": "LoginResult",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppInfo/AppStatus": {
      "get": {
        "tags": [
          "AppInfo"
        ],
        "summary": "Uygulamanın sürüm ve bakım bilgilerini getirir.",
        "operationId": "GetAppStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfo.Queries.AppStatusQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppInfo/GetTimeSlots": {
      "get": {
        "tags": [
          "AppInfo"
        ],
        "operationId": "GetTimeSlots",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppInfo.Queries.TimeStampQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppInfoAdministration/ChangeAppMaintenanceStatus": {
      "post": {
        "tags": [
          "AppInfoAdministration"
        ],
        "summary": "Uygulamanın bakım durumunu değiştirmeyi sağlar",
        "operationId": "ChangeAppMaintenanceStatus",
        "parameters": [
          {
            "name": "MaintenanceStatus",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AppInfoAdministration/ChangeAppMinimumIOSVersion": {
      "post": {
        "tags": [
          "AppInfoAdministration"
        ],
        "summary": "Uygulamanın minimum ios versiyonunu değiştirir",
        "operationId": "ChangeAppMinimumIOSVersion",
        "parameters": [
          {
            "name": "MinimumIOSVersion",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AppInfoAdministration/ChangeAppCurrentIOSVersion": {
      "post": {
        "tags": [
          "AppInfoAdministration"
        ],
        "summary": "Uygulamanın şu anki ios versiyonunu değiştirir",
        "operationId": "ChangeAppCurrentIOSVersion",
        "parameters": [
          {
            "name": "CurrentIOSVersion",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AppInfoAdministration/ChangeAppMinimumAndroidVersion": {
      "post": {
        "tags": [
          "AppInfoAdministration"
        ],
        "summary": "Uygulamanın minimum android versiyonunu değiştirir",
        "operationId": "ChangeAppMinimumAndroidVersion",
        "parameters": [
          {
            "name": "MinimumAndroidVersion",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AppInfoAdministration/ChangeAppCurrentAndroidVersion": {
      "post": {
        "tags": [
          "AppInfoAdministration"
        ],
        "summary": "Uygulamanın şu anki android versiyonunu değiştirir",
        "operationId": "ChangeAppCurrentAndroidVersion",
        "parameters": [
          {
            "name": "CurrentAndroidVersion",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Appointment/Create": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Öğrencinin öğretmenden randevu almasını sağlar.",
        "operationId": "CreateAppointment",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "InfoTimeZone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment.Commands.SelectedTimeRange"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment.Commands.SelectedTimeRange"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment.Commands.SelectedTimeRange"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment.Commands.SelectedTimeRange"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Appointment/ListMyAppointments": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Hesabın içinde bulunduğu randevuların listesini getirir.",
        "operationId": "ListMyAppointments",
        "parameters": [
          {
            "name": "LastId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment.Queries.ListMyAppointmentsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Appointment/ChangeDateTimeAsStudent": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Öğrenci olarak randevu vaktini değiştirmeye yarar. Değiştirilebilmesi için randevuya minimum 1 saat kalmış olması gerekir. Aynı gün içinde, aynı randevu üzerinde sadece 1 kere değişiklik yapılabilir. Bunun dışındaki değişiklikler için sistem yöneticisiyle irtibata geçilmesi gerekir.",
        "operationId": "ChangeDateTimeAsStudent",
        "parameters": [
          {
            "name": "AppointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Appointment/ChangeDateTimeAsTeacher": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Randevu vaktini değiştirmeye yarar. Değiştirilebilmesi için randevuya minimum 15 dakika kalmış olması gerekir. Aynı gün içinde, aynı randevu üzerinde sadece 1 kere değişiklik yapılabilir. Bunun dışındaki değişiklikler için sistem yöneticisiyle irtibata geçilmesi gerekir.",
        "operationId": "ChangeDateTimeAsTeacher",
        "parameters": [
          {
            "name": "AppointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StartTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTime",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Appointment/ReportAsStudent": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Öğrencinin randevuyu şikayet etmesini sağlar.",
        "operationId": "ReportAppointmentAsStudent",
        "parameters": [
          {
            "name": "AppointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment.Commands.ReportAsStudentCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Appointment/ReportAsTeacher": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Öğretmenin randevuyu şikayet etmesini sağlar.",
        "operationId": "ReportAppointmentAsTeacher",
        "parameters": [
          {
            "name": "AppointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Appointment.Commands.ReportAsTeacherCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Appointment/CancelAsStudent": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Öğrencinin dahil olduğu bir randevuyu iptal etmesini sağlar. Randevunun başlangıcına minimum 1 saat kala iptal işlemi gerçekleştirilebilir.",
        "operationId": "CancelAppointmentAsStudent",
        "parameters": [
          {
            "name": "AppointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Appointment/CancelAsTeacher": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Öğretmenin dahil olduğu bir randevuyu iptal etmesini sağlar. Randevunun başlangıcına minimum 15 dakika kala iptal işlemi gerçekleştirilebilir.",
        "operationId": "CancelAppointmentAsTeacher",
        "parameters": [
          {
            "name": "AppointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AppointmentAdministration/CancelAppointment": {
      "post": {
        "tags": [
          "AppointmentAdministration"
        ],
        "summary": "Bir randevuyu iptal eder.",
        "operationId": "CancelAppointmentAsAdmin",
        "parameters": [
          {
            "name": "AppointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AppointmentAdministration/ListAppointmentsOfTheStudent": {
      "get": {
        "tags": [
          "AppointmentAdministration"
        ],
        "summary": "Bir öğrencinin tüm(geçmiş, gelecek) randevularını listeler.",
        "operationId": "ListAppointmentsOfTheStudent",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentAdministration.Queries.ListAppointmentsOfTheStudentQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AppointmentAdministration/ListAppointmentsOfTheTeacher": {
      "get": {
        "tags": [
          "AppointmentAdministration"
        ],
        "summary": "Bir öğretmenin tüm(geçmiş, gelecek) randevularını listeler.",
        "operationId": "ListAppointmentsOfTheTeacher",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentAdministration.Queries.ListAppointmentsOfTheTeacherQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/AppointmentAdministration/ListAppointmentsTeacherForPay": {
      "get": {
        "tags": [
          "AppointmentAdministration"
        ],
        "operationId": "ListAppointmentsTeacherForPay",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Startdate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentAdministration.Queries.AppointmentsForPayResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppointmentAdministration/ListPaidAppointmentDetail": {
      "get": {
        "tags": [
          "AppointmentAdministration"
        ],
        "operationId": "ListPaidAppointmentDetail",
        "parameters": [
          {
            "name": "TeacherSalaryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppointmentAdministration.Queries.AppointmentsForPayResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Chat/ReportChatAsStudent": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Öğrenci olarak chat'i şikayet etmeye yarar.",
        "operationId": "ReportChatAsStudent",
        "parameters": [
          {
            "name": "ChatSessionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat.Commands.ReportChatAsStudentCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Chat/ReportChatAsTeacher": {
      "post": {
        "tags": [
          "Chat"
        ],
        "summary": "Öğretmen olarak chat'i şikayet etmeye yarar.",
        "operationId": "ReportChatAsTeacher",
        "parameters": [
          {
            "name": "ChatSessionId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat.Commands.ReportChatAsTeacherCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Chat/GetUserInformations": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Chat sistemi sadece kullanıcı idlerini bilmekte. Bu yüzden kullanıcının diğer detaylarını bu komut ile çekeceğiz.",
        "operationId": "GetUserInformations",
        "parameters": [
          {
            "name": "UserIdList",
            "in": "query",
            "description": "Bilgileri öğrenilmek istenilen kullanıcıların guid id listesi",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat.Queries.GetUserInformationsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Chat/GetChatJwt": {
      "get": {
        "tags": [
          "Chat"
        ],
        "summary": "Chat sistemine giriş yapılabilmesi için sadece Fosh Chat'te kullanılabilen özel bir jwt üretir.",
        "operationId": "GetChatJwt",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat.Queries.GetChatJwtQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/CustomerService/SendContactMessage": {
      "post": {
        "tags": [
          "CustomerService"
        ],
        "summary": "İletişim formunu kaydeder.",
        "operationId": "SendContactMessage",
        "parameters": [
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerService.Commands.SendContactMessageCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/CustomerServiceAdministration/ListComplaints": {
      "get": {
        "tags": [
          "CustomerServiceAdministration"
        ],
        "summary": "Şikayetlerin listesini getirmeyi sağlar",
        "operationId": "ListComplaints",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemPerPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filters.SearchKeyword",
            "in": "query",
            "description": "Şikayetler listesinin arama kelimesini barındırır",
            "schema": {
              "maxLength": 64,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "Filters.ListComplaintsRoles",
            "in": "query",
            "description": "Listelenilecek şikayetlerin rollerini belirtir",
            "schema": {
              "pattern": "^(STUDENT|TEACHER)$",
              "type": "string"
            }
          },
          {
            "name": "Filters.ListComplaintsStates",
            "in": "query",
            "description": "Listelenicek şikayetlerin durumunu belirtir",
            "schema": {
              "pattern": "^(COMPLETED|REJECTED|SEEN|NOT_SEEN_YET)$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerServiceAdministration.Queries.ListComplaintsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/CustomerServiceAdministration/GetComplaint": {
      "get": {
        "tags": [
          "CustomerServiceAdministration"
        ],
        "summary": "Şikayetin detayını getirmeyi sağlar",
        "operationId": "GetComplaint",
        "parameters": [
          {
            "name": "ComplaintId",
            "in": "query",
            "description": "Şikayet Id sini barındırır",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerServiceAdministration.Queries.GetComplaintQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/CustomerServiceAdministration/ChangeComplaintStateToNotSeenYet": {
      "post": {
        "tags": [
          "CustomerServiceAdministration"
        ],
        "summary": "Şikayetin durumunu henüz işlem yapılmadı olarak değiştirmeyi sağlar",
        "operationId": "ChangeComplaintStateToNotSeenYet",
        "parameters": [
          {
            "name": "ComplaintId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/CustomerServiceAdministration/ChangeComplaintStateToSeen": {
      "post": {
        "tags": [
          "CustomerServiceAdministration"
        ],
        "summary": "Şikayetin durumunu görüldü olarak değiştirmeyi sağlar",
        "operationId": "ChangeComplaintStateToSeen",
        "parameters": [
          {
            "name": "ComplaintId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/CustomerServiceAdministration/ChangeComplaintStateToCompleted": {
      "post": {
        "tags": [
          "CustomerServiceAdministration"
        ],
        "summary": "Şikayetin durumunu tamamlandı olarak değiştirmeyi sağlar",
        "operationId": "ChangeComplaintStateToCompleted",
        "parameters": [
          {
            "name": "ComplaintId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/CustomerServiceAdministration/ChangeComplaintStateToRejected": {
      "post": {
        "tags": [
          "CustomerServiceAdministration"
        ],
        "summary": "Şikayetin durumunu reddedildi olarak değiştirmeyi sağlar",
        "operationId": "ChangeComplaintStateToRejected",
        "parameters": [
          {
            "name": "ComplaintId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Iyzico/IyzicoWebhookResult": {
      "post": {
        "tags": [
          "Iyzico"
        ],
        "summary": "Iyzico subscribe webhook'unun dürttüğü adrestir",
        "operationId": "IyzicoWebhookResult",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "IyziEventTime": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "IyziEventType": {
                    "type": "string"
                  },
                  "IyziReferenceCode": {
                    "type": "string"
                  },
                  "Token": {
                    "type": "string"
                  },
                  "PaymentId": {
                    "type": "string"
                  },
                  "PaymentConversationId": {
                    "type": "string"
                  },
                  "Status": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "IyziEventTime": {
                  "style": "form"
                },
                "IyziEventType": {
                  "style": "form"
                },
                "IyziReferenceCode": {
                  "style": "form"
                },
                "Token": {
                  "style": "form"
                },
                "PaymentId": {
                  "style": "form"
                },
                "PaymentConversationId": {
                  "style": "form"
                },
                "Status": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "text/plain": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Iyzico/IyzicoRedirectResult": {
      "post": {
        "tags": [
          "Iyzico"
        ],
        "summary": "Iyzico subscribe result'unda geri dönülen endpointtir",
        "operationId": "IyzicoRedirectResult",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "token": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "text/plain": {
                "schema": { }
              },
              "application/json": {
                "schema": { }
              },
              "text/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/IyzicoSubscription/List": {
      "get": {
        "tags": [
          "IyzicoSubscription"
        ],
        "operationId": "ListSubscriptionPlan",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemPerPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchKeyword",
            "in": "query",
            "description": "Film kategorisinde arama yapılacak kelime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IyzicoSubscription.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/IyzicoSubscription/Create": {
      "post": {
        "tags": [
          "IyzicoSubscription"
        ],
        "operationId": "CreateSubscription",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IyzicoSubscription.Commands.CreateCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IyzicoSubscription.Commands.CreateCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IyzicoSubscription.Commands.CreateCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IyzicoSubscription.Commands.CreateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IyzicoSubscription.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/IyzicoSubscription/GetDetailsById": {
      "get": {
        "tags": [
          "IyzicoSubscription"
        ],
        "operationId": "GetDetailsByIdSubscriptionPlan",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IyzicoSubscription.Queries.IyzicoSubscriptionDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/IyzicoSubscription/DeleteSubscriptionPlan": {
      "delete": {
        "tags": [
          "IyzicoSubscription"
        ],
        "operationId": "DeleteByIdSubscriptionPlan",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/IyzicoSubscription/Update": {
      "put": {
        "tags": [
          "IyzicoSubscription"
        ],
        "operationId": "UpdateSubscription",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/IyzicoSubscription.Commands.UpdateCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IyzicoSubscription.Commands.UpdateCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IyzicoSubscription.Commands.UpdateCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IyzicoSubscription.Commands.UpdateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IyzicoSubscription.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/IyzicoSubscription/GetDropDownPackageDurationOptions": {
      "get": {
        "tags": [
          "IyzicoSubscription"
        ],
        "operationId": "GetDropDownPackageDurationOptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IyzicoSubscription.Queries.CommonSubscriptionDropdown"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/IyzicoSubscription/GetDropDownSubscriptionDayOptions": {
      "get": {
        "tags": [
          "IyzicoSubscription"
        ],
        "operationId": "GetDropDownSubscriptionDayOptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IyzicoSubscription.Queries.CommonSubscriptionDropdown"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/IyzicoSubscription/GetDropDownSubscriptionMinutesPerDayOptions": {
      "get": {
        "tags": [
          "IyzicoSubscription"
        ],
        "operationId": "GetDropDownSubscriptionMinutesPerDayOptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IyzicoSubscription.Queries.CommonSubscriptionDropdown"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/LegalDocument/GetAll": {
      "get": {
        "tags": [
          "LegalDocument"
        ],
        "summary": "Sistemde kayıtlı tüm yasal dökümanları getirir.",
        "operationId": "GetAllLegalDocuments",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalDocument.Queries.GetAllQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/LegalDocumentAdministration/GetAll": {
      "get": {
        "tags": [
          "LegalDocumentAdministration"
        ],
        "summary": "Sistemde kayıtlı tüm yasal dökümanları getirir.",
        "operationId": "GetAllLegalDocumentsForAdministration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LegalDocumentAdministration.Queries.GetAllQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/LegalDocumentAdministration/ChangeTitle": {
      "post": {
        "tags": [
          "LegalDocumentAdministration"
        ],
        "summary": "Belirlenen dökümanın başlığını değiştirir.",
        "operationId": "ChangeTitleOfTheLegalDocument",
        "parameters": [
          {
            "name": "LegalDocumentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/LegalDocumentAdministration/ChangeSlug": {
      "post": {
        "tags": [
          "LegalDocumentAdministration"
        ],
        "summary": "Belirlenen dökümanın kısa adını değiştirir.",
        "operationId": "ChangeSlugOfTheLegalDocument",
        "parameters": [
          {
            "name": "LegalDocumentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Slug",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/LegalDocumentAdministration/ChangeContent": {
      "post": {
        "tags": [
          "LegalDocumentAdministration"
        ],
        "summary": "Belirlenen dökümanın içeriğini değiştirir.",
        "operationId": "ChangeContentOfTheLegalDocument",
        "parameters": [
          {
            "name": "LegalDocumentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Live/DirectCall": {
      "post": {
        "tags": [
          "Live"
        ],
        "summary": "Öğrenci, ücretli görüşme talebinde bulunur. Görüşme başlangıcı ile birlikte oda kayıt altına alınmalıdır.",
        "operationId": "DirectCall",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Live.Commands.DirectCallCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Live/RequestFreeCall": {
      "post": {
        "tags": [
          "Live"
        ],
        "summary": "Öğrenci, ücretsiz görüşme talebinde bulunur. Görüşme başlangıcı ile birlikte oda kayıt altına alınmalıdır.",
        "operationId": "RequestFreeCall",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Live.Commands.RequestFreeCallCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Live/JoinToRoomAsStudent": {
      "post": {
        "tags": [
          "Live"
        ],
        "summary": "Öğrencinin vakti gelmiş randevusuna katılım gerçekleştirmesini sağlar.",
        "operationId": "JoinToRoomAsStudent",
        "parameters": [
          {
            "name": "AppointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsScreenShare",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Live.Commands.JoinToRoomAsStudentCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Live/JoinToRoomAsTeacher": {
      "post": {
        "tags": [
          "Live"
        ],
        "summary": "Öğretmenin vakti gelmiş randevusuna katılım gerçekleştirmesini sağlar.",
        "operationId": "JoinToRoomAsTeacher",
        "parameters": [
          {
            "name": "AppointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsScreenShare",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Live.Commands.JoinToRoomAsTeacherCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Live/GetCall": {
      "get": {
        "tags": [
          "Live"
        ],
        "summary": "Arama bilgilerini çekmeyi sağlar.",
        "operationId": "GetCall",
        "parameters": [
          {
            "name": "CallId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Live.Queries.GetCallQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher,Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Live/GetRoomInfo": {
      "get": {
        "tags": [
          "Live"
        ],
        "summary": "Canlı yayın odasının bilgilerini çekmeyi sağlar.",
        "operationId": "GetRoomInfo",
        "parameters": [
          {
            "name": "RoomId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Live.Queries.GetRoomInfoQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher,Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Live/LeaveFromRoomAsStudent": {
      "post": {
        "tags": [
          "Live"
        ],
        "summary": "Öğrencinin canlı yayından ayrılmasını sağlar.",
        "operationId": "LeaveFromRoomAsStudent",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Live/LeaveFromRoomAsTeacher": {
      "post": {
        "tags": [
          "Live"
        ],
        "summary": "Öğretmenin canlı yayından ayrılmasını sağlar.",
        "operationId": "LeaveFromRoomAsTeacher",
        "parameters": [
          {
            "name": "appointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/OneSignal/SetPlayerId": {
      "post": {
        "tags": [
          "OneSignal"
        ],
        "summary": "Kullanıcının onesignal player id'sini sunucuya bildirmesini sağlar.",
        "operationId": "SetPlayerId",
        "parameters": [
          {
            "name": "playerId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher,Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Payment/ListSubscriptionOptions": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Abonelik seçeneklerini getirir.",
        "operationId": "ListSubscriptionOptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment.Queries.ListSubscriptionOptionsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Payment/ListDropDownSubscriptionOptions": {
      "get": {
        "tags": [
          "Payment"
        ],
        "operationId": "ListDropDownSubscriptionOptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment.Queries.ListDropDownSubscriptionOptionsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Payment/Subscribe": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Öğrencinin abonelik başlatmasını veya abonelik tipini değiştirmesini sağlar.",
        "operationId": "Subscribe",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment.Commands.SubscriptionPackageDetails"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment.Commands.SubscriptionPackageDetails"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment.Commands.SubscriptionPackageDetails"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment.Commands.SubscriptionPackageDetails"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment.Commands.SubscriptionCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Payment/CancelCurrentSubscription": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Kullanıcının şu anki aboneliğini iptal eder. Bu durumda kullanıcı ödeme dönemi sonuna kadar haklarından faydalanabilir veya aboneliğini tekrar aktif hale getirebilir.",
        "operationId": "CancelCurrentSubscription",
        "parameters": [
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/PromotionAdministration/ListDiscounts": {
      "get": {
        "tags": [
          "PromotionAdministration"
        ],
        "summary": "İndirim kodlarının listesini getirir",
        "operationId": "ListDiscounts",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemPerPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchKeyword",
            "in": "query",
            "description": "Discount listesinde arama yapılacak kelimeyi barındırır",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionAdministration.Queries.ListDiscountsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/PromotionAdministration/CreateDiscount": {
      "post": {
        "tags": [
          "PromotionAdministration"
        ],
        "summary": "Yeni indirim kodu oluşturmayı sağlar",
        "operationId": "CreateDiscount",
        "parameters": [
          {
            "name": "DiscountCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DiscountPercentage",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromotionAdministration.Commands.CreateDiscountCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/PromotionAdministration/ChangeDiscountActiveState": {
      "post": {
        "tags": [
          "PromotionAdministration"
        ],
        "summary": "İndirimin aktiflik durumunu değiştirmeyi sağlar",
        "operationId": "ChangeDiscountActiveState",
        "parameters": [
          {
            "name": "DiscountId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NewState",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/PromotionAdministration/DeleteDiscount": {
      "post": {
        "tags": [
          "PromotionAdministration"
        ],
        "summary": "İndirim kodunu silmeye yarar",
        "operationId": "DeleteDiscount",
        "parameters": [
          {
            "name": "DiscountId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Referrals/List": {
      "get": {
        "tags": [
          "Referrals"
        ],
        "operationId": "ListReferral",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemPerPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchKeyword",
            "in": "query",
            "description": "Film kategorisinde arama yapılacak kelime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referral.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Referrals/Create": {
      "post": {
        "tags": [
          "Referrals"
        ],
        "operationId": "CreateReferral",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.CreateCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.CreateCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.CreateCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.CreateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referral.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Referrals/Update": {
      "put": {
        "tags": [
          "Referrals"
        ],
        "operationId": "UpdateReferral",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.UpdateCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.UpdateCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.UpdateCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.UpdateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referral.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Referrals/UpdateStatus": {
      "put": {
        "tags": [
          "Referrals"
        ],
        "operationId": "UpdateStatusReferral",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.UpdateStatusCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.UpdateStatusCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.UpdateStatusCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Referral.Commands.UpdateStatusCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referral.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Referrals/Delete": {
      "delete": {
        "tags": [
          "Referrals"
        ],
        "operationId": "DeleteReferral",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Referrals/ListStudents": {
      "get": {
        "tags": [
          "Referrals"
        ],
        "operationId": "ListReferralStudents",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemPerPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchKeyword",
            "in": "query",
            "description": "Film kategorisinde arama yapılacak kelime",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referral.Queries.ListStudentQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Referrals/GetDetailsById": {
      "get": {
        "tags": [
          "Referrals"
        ],
        "operationId": "GetDetailsByIdReferral",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referral.Queries.ReferralDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Referrals/GetDropdown": {
      "get": {
        "tags": [
          "Referrals"
        ],
        "operationId": "GetDropDownReferral",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Referral.Queries.ReferralDropdown"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Referrals/ValidationCode": {
      "get": {
        "tags": [
          "Referrals"
        ],
        "operationId": "ValidationReferral",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "packageId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Referral.Queries.ReferralValidationDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Scheduler/GetMyAvailableTimes": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Öğretmenin kendi müsaitlik takvimini getirir.",
        "operationId": "GetMyAvailableTimes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scheduler.Queries.GetMyAvailableTimesQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Scheduler/ChangeMyAvailableTimes": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Öğretmenin müsaitlik vakitlerini değiştirebilmesini sağlar.",
        "operationId": "ChangeMyAvailableTimes",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Scheduler.Commands.SchedulerChange"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Scheduler.Commands.SchedulerChange"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Scheduler.Commands.SchedulerChange"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Scheduler.Commands.SchedulerChange"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/UpdateProfilePhoto": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Öğrencinin profil fotoğrafını değiştirmesini sağlar.",
        "operationId": "UpdateProfilePhotoAsStudent",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Photo": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student.Commands.UpdateProfilePhotoCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/DeleteMyAccount": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Öğrencinin hesabının silme isteğini admine mail olarak iletir.",
        "operationId": "DeleteMyAccountAsStudent",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/StartToExportMyAllInformations": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Öğrencinin tüm verisini dışarı aktarma işlemini başlatır. Halihazırda dışa aktarım dosyaları hazırlanıyorsa hata vermelidir.",
        "operationId": "StartToExportMyAllInformationsAsStudent",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student.Commands.StartToExportMyAllInformationsCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/ListMyExports": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Öğrencinin dışa aktarılmaya hazır verilerini listeler.",
        "operationId": "ListMyExportsAsStudent",
        "parameters": [
          {
            "name": "LastCreatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student.Queries.ListMyExportsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/GetDetails": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Öğrencinin detayını getirir.",
        "operationId": "GetStudentDetails",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student.Queries.GetDetailsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/GetMyDetails": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Öğrencinin kendi detayını getirir.",
        "operationId": "GetMyDetailsAsStudent",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student.Queries.GetMyDetailsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/Report": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Öğretmenin öğrenciyi rapor etmesini sağlar.",
        "operationId": "ReportStudent",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/Block": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Öğretmenin öğrenciyi engellemesini sağlar.",
        "operationId": "BlockStudent",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/Unblock": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Öğretmenin öğrencinin engelini kaldırmasını sağlar.",
        "operationId": "UnblockStudent",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/ChangeMyEmailAddress": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Öğrencinin kendi e-posta adresini değiştirebilmesini sağlar.",
        "operationId": "ChangeMyEmailAddress",
        "parameters": [
          {
            "name": "NewEmail",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/ChangeMyPhoneNumber": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Öğrencinin kendi telefon numarasını değiştirebilmesini sağlar.",
        "operationId": "ChangeMyPhoneNumber",
        "parameters": [
          {
            "name": "NewPhone",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/ChangeMyName": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Öğrencinin kendi ismini değiştirebilmesini sağlar.",
        "operationId": "ChangeMyName",
        "parameters": [
          {
            "name": "NewName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Student/LoginWithDirectAuth": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Öğrenci olarak giriş yapmayı sağlar.",
        "operationId": "LoginWithDirectAuthAsStudent",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student.Commands.LoginWithDirectAuthCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Student/LoginWithFacebook": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Facebook login işlevini öğrenci hesabı için gerçekleştirir.",
        "operationId": "LoginWithFacebookAsStudent",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Student/LoginWithGoogle": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Google login işlevini öğrenci hesabı için gerçekleştirir.",
        "operationId": "LoginWithGoogleAsStudent",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Student/LoginWithApple": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Apple login işlevini öğrenci hesabı için gerçekleştirir.",
        "operationId": "LoginWithAppleAsStudent",
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Student/Register": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "E-posta ve şifre ile öğrenci kaydı yapılabilmesini sağlar.",
        "operationId": "RegisterAsStudent",
        "parameters": [
          {
            "name": "NameSurname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accent",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LanguageLevel",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student.Commands.RegisterCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Student/LoginGoogleStudent": {
      "post": {
        "tags": [
          "Student"
        ],
        "operationId": "LoginGoogleAsStudent",
        "parameters": [
          {
            "name": "NameSurname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Student.Commands.RegisterCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Student/UpdateStudentSpecalities": {
      "post": {
        "tags": [
          "Student"
        ],
        "operationId": "UpdateStudentSpecalities",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Student.Commands.UpdateMySpecalitiesParemeters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Student.Commands.UpdateMySpecalitiesParemeters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Student.Commands.UpdateMySpecalitiesParemeters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Student.Commands.UpdateMySpecalitiesParemeters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/GetStudentDetails": {
      "get": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Sistemdeki öğrencileri listeler",
        "operationId": "GetStudentDetailsForAdministration",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "description": "Öğrencinin hesap id'sidir",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAdministration.Queries.GetStudentDetailsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/List": {
      "get": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrencinin detaylarını getirir.",
        "operationId": "ListStudentsForManagement",
        "parameters": [
          {
            "name": "SearchKeyword",
            "in": "query",
            "description": "Öğrenci ismiyle arama yapmayı sağlar.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApprovementState",
            "in": "query",
            "description": "Öğrencinin onay durumuna göre aramayı sağlar.\r\nSeçenekler:\r\nONLY_APPROVED_STUDENTS: Sadece onaylı öğrencileri listeye dahil eder.\r\nONLY_UNAPPROVED_STUDENTS: Sadece onaysız öğrencileri listeye dahil eder.",
            "schema": {
              "pattern": "^(ONLY_APPROVED_STUDENTS|ONLY_UNAPPROVED_STUDENTS)$",
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Gidilmek istenilen sayfa",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAdministration.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/ApproveProfilePicture": {
      "post": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrencinin profil fotoğrafını onaylar.",
        "operationId": "ApproveStudentProfilePicture",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/UnapproveProfilePicture": {
      "post": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrencinin profil fotoğrafının onayını kaldırır.",
        "operationId": "UnapproveStudentProfilePicture",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/UnBan": {
      "post": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrenciyi siteden yasaklamasını Kaldırır.",
        "operationId": "UnBanStudent",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/Ban": {
      "post": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrenciyi siteden yasaklar. Artık o hesap ve öğrencinin kullandığı ip'ler siteye giriş yapamaz.",
        "operationId": "BanStudent",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/DeleteAccountDueGDPR": {
      "post": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrencinin hesabını siteden siler.",
        "operationId": "DeleteStudentAccountDueGDPR",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/ChangeName": {
      "post": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrencinin ismini değiştirir.",
        "operationId": "ChangeStudentName",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NewName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/ChangeEmail": {
      "post": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrencinin e-posta adresini değiştirir.",
        "operationId": "ChangeStudentEmail",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NewEmail",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/ChangePhoneNumber": {
      "post": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrencinin telefon numarasını değiştirir.",
        "operationId": "ChangeStudentPhoneNumber",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NewPhoneNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/ChangeProfilePicture": {
      "post": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrencinin profil fotoğrafını değiştirir.",
        "operationId": "ChangeStudentProfilePicture",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "NewProfilePicture": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "NewProfilePicture": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentAdministration.Commands.ChangeProfilePictureCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentAdministration/ChangePassword": {
      "post": {
        "tags": [
          "StudentAdministration"
        ],
        "summary": "Bir öğrencinin şifresini değiştirir.",
        "operationId": "ChangeStudentPassword",
        "parameters": [
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NewPassword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentCredits/List": {
      "get": {
        "tags": [
          "StudentCredits"
        ],
        "operationId": "ListStudentCredits",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemPerPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchKeyword",
            "in": "query",
            "description": "Film kategorisinde arama yapılacak kelime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentCredit.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentCredits/Create": {
      "post": {
        "tags": [
          "StudentCredits"
        ],
        "operationId": "CreateCredits",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCredit.Commands.CreateCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCredit.Commands.CreateCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCredit.Commands.CreateCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCredit.Commands.CreateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentCredit.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentCredits/GetDetailsById": {
      "get": {
        "tags": [
          "StudentCredits"
        ],
        "operationId": "GetDetailsByIdCredits",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentCredit.Queries.StudentCreditDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentCredits/Update": {
      "put": {
        "tags": [
          "StudentCredits"
        ],
        "operationId": "UpdateCredits",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCredit.Commands.UpdateCommand"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCredit.Commands.UpdateCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCredit.Commands.UpdateCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StudentCredit.Commands.UpdateCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentCredit.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/StudentCredits/GetDropDownStudents": {
      "get": {
        "tags": [
          "StudentCredits"
        ],
        "operationId": "GetDropDownStudents",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentCredit.Queries.CommonDropdown"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/SubscriptionAdministration/ListSubscriptionOptions": {
      "get": {
        "tags": [
          "SubscriptionAdministration"
        ],
        "summary": "Abonelik seçeneklerini getirir.",
        "operationId": "ListSubscriptionOptionsForManagement",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionAdministration.Queries.ListSubscriptionOptionsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/SubscriptionAdministration/ListSubscriptionDropdownOptions": {
      "get": {
        "tags": [
          "SubscriptionAdministration"
        ],
        "operationId": "ListSubscriptionDropdownOptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionAdministration.Queries.ListSubscriptionDropdownOptionsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/SubscriptionAdministration/AddDayOption": {
      "post": {
        "tags": [
          "SubscriptionAdministration"
        ],
        "summary": "Haftada kaç günlük eğitim alınabileceğine dair paket seçeneklerine ekleme yapar.",
        "operationId": "AddDayOptionToSubscriptionPackages",
        "parameters": [
          {
            "name": "Day",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/SubscriptionAdministration/RemoveDayOption": {
      "post": {
        "tags": [
          "SubscriptionAdministration"
        ],
        "summary": "Haftada kaç günlük eğitim alınabileceğine dair paket seçeneklerinden bir öğeyi siler.",
        "operationId": "RemoveDayOptionFromSubscriptionPackages",
        "parameters": [
          {
            "name": "Day",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/SubscriptionAdministration/AddMinutesPerDayOption": {
      "post": {
        "tags": [
          "SubscriptionAdministration"
        ],
        "summary": "Paket içerisinde günde kaç dakika eğitim alabileceği seçeneğini ekler.",
        "operationId": "AddMinutesPerDayOptionToSubscriptionPackages",
        "parameters": [
          {
            "name": "Minutes",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/SubscriptionAdministration/RemoveMinutesPerDayOption": {
      "post": {
        "tags": [
          "SubscriptionAdministration"
        ],
        "summary": "Paket içerisinde günde kaç dakika eğitim alabileceği seçeneğini siler.",
        "operationId": "RemoveMinutesPerDayOptionFromSubscriptionPackages",
        "parameters": [
          {
            "name": "Day",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/SubscriptionAdministration/AddPackageDurationOption": {
      "post": {
        "tags": [
          "SubscriptionAdministration"
        ],
        "summary": "Paket süresi seçeneği ekler.",
        "operationId": "AddPackageDurationOptionToSubscriptionPackages",
        "parameters": [
          {
            "name": "DurationName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DurationAsMonth",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "DiscountRate",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DayOptionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "MinuteOptionId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PricePerMint",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "DiscountedAmount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Total",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "TotalDiscounted",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "TotalMinutes",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionAdministration.Commands.AddPackageDurationOptionCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/SubscriptionAdministration/RemovePackageDurationOption": {
      "post": {
        "tags": [
          "SubscriptionAdministration"
        ],
        "summary": "Paket süresi seçeneğini siler.",
        "operationId": "RemovePackageDurationOptionFromSubscriptionPackages",
        "parameters": [
          {
            "name": "PackageDurationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/SubscriptionAdministration/ChangePricePerMinute": {
      "post": {
        "tags": [
          "SubscriptionAdministration"
        ],
        "summary": "Dakika başına ücreti günceller.",
        "operationId": "ChangePricePerMinuteForSubscriptionPackages",
        "parameters": [
          {
            "name": "Price",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/UpdateProfilePhoto": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenin profil fotoğrafını değiştirmesini sağlar.",
        "operationId": "UpdateMyProfilePhotoAsTeacher",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "Photo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "Photo": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teacher.Commands.UpdateProfilePhotoCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/GetMyDetails": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenin kendi detayını getirir.",
        "operationId": "GetMyDetailsAsTeacher",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teacher.Queries.GetMyDetailsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/DeleteMyAccount": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenin hesabının silme isteğini admine mail olarak iletir.",
        "operationId": "DeleteMyAccountAsTeacher",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/StartToExportMyAllInformations": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Kullanıcının tüm verisini dışarı aktarma işlemini başlatır. Halihazırda dışa aktarım dosyaları hazırlanıyorsa hata vermelidir.",
        "operationId": "StartToExportMyAllInformationsAsTeacher",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teacher.Commands.StartToExportMyAllInformationsCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/ListMyExports": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenin dışa aktarılmaya hazır verilerini listeler.",
        "operationId": "ListMyExportsAsTeacher",
        "parameters": [
          {
            "name": "LastCreatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teacher.Queries.ListMyExportsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/List": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenleri listeler. Ayrıca filtreler uygulanabilir.",
        "operationId": "ListTeachers",
        "parameters": [
          {
            "name": "LastId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Filters.Query",
            "in": "query",
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "Filters.TeachingStyles",
            "in": "query",
            "description": "Girilebilecek değerler:\r\nKIND_AND_PATIENT,\r\nFUN_AND_GREGARIOUS,\r\nSCHOLARLY_AND_KNOWLEDGEABLE",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Filters.LessonTypes",
            "in": "query",
            "description": "Girilebilecek değerler:\r\nPRONUNCIATION_LESSONS,\r\nGRAMMAR_LESSONS,\r\nLESSONS_WITH_MOVIES,\r\nLESSONS_FOR_CHILDREN,\r\nBUSINESS_ENGLISH,\r\nUNIVERSITY_ENGLISH_PREPARATION,\r\nEXAM,\r\nTOEFL_PREPARATION,\r\nIELTS_PREPARATION",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Filters.LanguageLevel",
            "in": "query",
            "description": "Girilebilecek değerler:\r\nBEGINNER,\r\nINTERMEDIATE,\r\nADVANCED",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Filters.AccentTypes",
            "in": "query",
            "description": "Girilebilecek değerler:\r\nNATIVE_US,\r\nNATIVE_BRITISH,\r\nTURKISH,\r\nOTHER",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teacher.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Teacher/ListMyFavorites": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "summary": "Favori öğretmenleri listeler. Ayrıca isimle arama filtresi uygulanabilir.",
        "operationId": "ListMyFavoriteTeachers",
        "parameters": [
          {
            "name": "LastTeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teacher.Queries.ListMyFavoritesQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/GetDetails": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmen'in detayını getirir.",
        "operationId": "GetTeacherDetails",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teacher.Queries.GetDetailsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Teacher/Report": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğrencinin öğretmeni rapor etmesini sağlar.",
        "operationId": "ReportTeacher",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/Block": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğrencinin öğretmeni engellemesini sağlar.",
        "operationId": "BlockTeacher",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/Unblock": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğrencinin öğretmenin engelini kaldırmasını sağlar.",
        "operationId": "UnblockTeacher",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/Favorite": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğrencinin öğretmeni favoriye eklemesini sağlar.",
        "operationId": "FavoriteTeacher",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/Unfavorite": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğrencinin öğretmeni favorilerinden kaldırmasını sağlar.",
        "operationId": "UnfavoriteTeacher",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/Rate": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Görüşme sonrasında öğretmeni puanlar.",
        "operationId": "RateTeacher",
        "parameters": [
          {
            "name": "AppointmentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Rate",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/TeacherRatePost": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "operationId": "TeacherRatePost",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Rate",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/RatingList": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "operationId": "RatingList",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Teacher.Queries.MyRatingResultList"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Teacher/RatingDelete": {
      "delete": {
        "tags": [
          "Teacher"
        ],
        "operationId": "RatingDelete",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Teacher/CheckStudentReview": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "operationId": "CheckStudentReview",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "StudentId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Teacher/ChangeMyIbanNumber": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenin sisteme kayıtlı IBAN bilgisini değiştirir.",
        "operationId": "ChangeMyIbanNumber",
        "parameters": [
          {
            "name": "BankName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountHolderName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Iban",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/ChangeMyYoutubeVideoUrl": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenin youtube video linkini değiştirir.",
        "operationId": "ChangeMyYoutubeVideoUrl",
        "parameters": [
          {
            "name": "YoutubeVideoUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/ChangeMyDescription": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenin açıklamasını değiştirir.",
        "operationId": "ChangeMyDescription",
        "parameters": [
          {
            "name": "NewDescription",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/ChangeMyOnlineStatus": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenin çevrimiçi/çevrimdışı durumunu değiştirir.",
        "operationId": "ChangeMyOnlineStatus",
        "parameters": [
          {
            "name": "IsOnline",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/MyEarnings": {
      "get": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenin kazanç durumunu getirir.\r\nKazanç hesaplaması neye göre ve nasıl olacak?",
        "operationId": "MyEarnings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teacher.Queries.MyEarningsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/AcceptCall": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmene gelen anlık aramayı kabul etmesini sağlar.",
        "operationId": "AcceptCall",
        "parameters": [
          {
            "name": "CallId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/RejectCall": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmene gelen anlık aramayı reddetmesini sağlar.",
        "operationId": "RejectCall",
        "parameters": [
          {
            "name": "CallId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher,Student",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/Register": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmen olarak kayıt olmayı sağlar",
        "operationId": "RegisterAsTeacher",
        "parameters": [
          {
            "name": "NameSurname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EMail",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PhoneNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "YoutubeVideoUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accent",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TeachingStyles",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LessonTypes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LanguageLevel",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ProfilePhoto": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "ProfilePhoto": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teacher.Commands.RegisterCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Teacher/UpdateMySpecalities": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmen'in kendi uzmanlıklarını güncelleyebilmesini sağlar.",
        "operationId": "UpdateMySpecalities",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Teacher.Commands.UpdateMySpecalitiesParemeters"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Teacher.Commands.UpdateMySpecalitiesParemeters"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Teacher.Commands.UpdateMySpecalitiesParemeters"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Teacher.Commands.UpdateMySpecalitiesParemeters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/Teacher/LoginWithDirectAuth": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "summary": "Öğretmenin eposta ve şifre ile giriş yapabilmesini sağlar.",
        "operationId": "LoginWithDirectAuthAsTeacher",
        "parameters": [
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Password",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Teacher.Commands.LoginWithDirectAuthCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/Teacher/LoginOutWithDirectAuth": {
      "post": {
        "tags": [
          "Teacher"
        ],
        "operationId": "LoginOutWithDirectAuthAsTeacher",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/TeacherAdministration/List": {
      "get": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Sistemdeki öğretmenleri listeler",
        "operationId": "ListTeachersForManagement",
        "parameters": [
          {
            "name": "SearchKeyword",
            "in": "query",
            "description": "Öğretmen ismiyle arama yapmayı sağlar.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ApprovementState",
            "in": "query",
            "description": "Öğretmenin onay durumuna göre aramayı sağlar.\r\nSeçenekler:\r\nONLY_APPROVED_TEACHERS: Sadece onaylı öğretmenleri listeye dahil eder.\r\nONLY_UNAPPROVED_TEACHERS: Sadece onaysız öğretmenleri listeye dahil eder.",
            "schema": {
              "pattern": "^(ONLY_APPROVED_TEACHERS|ONLY_UNAPPROVED_TEACHERS)$",
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Gidilmek istenilen sayfa",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherAdministration.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/GetTeacherDetails": {
      "get": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Öğretmenin detayını getirir.",
        "operationId": "GetTeacherDetailsForAdministration",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherAdministration.Queries.GetDetailsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ApproveAccount": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin hesabını onaylar. Onaylanan öğretmen artık sisteme giriş yapabilir.",
        "operationId": "ApproveTeacherAccount",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/RejectAccount": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin hesabını kabul etmez. Öğretmene sebebiyle birlikte düzenleme bildirimi atılabilir.\r\nHesap silinebilir.",
        "operationId": "RejectTeacherAccount",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ApproveProfilePicture": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin profil fotoğrafını onaylar.",
        "operationId": "ApproveTeacherProfilePicture",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/RejectProfilePicture": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin profil fotoğrafını kabul etmez.",
        "operationId": "RejectTeacherProfilePicture",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/UnBan": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmeni siteden yasaklamasını kaldırır.",
        "operationId": "UnBanTeacher",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/Ban": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmeni siteden yasaklar. Artık o hesap ve öğretmenin kullandığı ip'ler siteye giriş yapamaz.",
        "operationId": "BanTeacher",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/DeleteAccountDueGDPR": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin hesabını siteden siler.",
        "operationId": "DeleteTeacherAccountDueGDPR",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ChangeName": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin ismini değiştirir.",
        "operationId": "ChangeTeacherName",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NewName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ChangeEmail": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin e-posta adresini değiştirir.",
        "operationId": "ChangeTeacherEmail",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NewEmail",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ChangePhoneNumber": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin telefon numarasını değiştirir.",
        "operationId": "ChangeTeacherPhoneNumber",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NewPhoneNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ChangeProfilePicture": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin profil fotoğrafını değiştirir.",
        "operationId": "ChangeTeacherProfilePicture",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "NewProfilePicture": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "NewProfilePicture": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherAdministration.Commands.ChangeProfilePictureCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ChangeDescription": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin açıklamasını değiştirir.",
        "operationId": "ChangeTeacherDescription",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NewDescription",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ChangeSpecalities": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin uzmanlıklarını değiştirir.",
        "operationId": "ChangeTeacherSpecalities",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TeacherAdministration.Commands.Specalities"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeacherAdministration.Commands.Specalities"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TeacherAdministration.Commands.Specalities"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TeacherAdministration.Commands.Specalities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ChangeYoutubeVideoUrl": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin youtube video url'sini değiştirir.",
        "operationId": "ChangeTeacherYoutubeUrl",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NewYoutubeUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ChangeIbanDetails": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin iban bilgilerini değiştirir.",
        "operationId": "ChangeTeacherIbanDetails",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BankName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountHolderName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Iban",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ChangePassword": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin şifresini değiştirir.",
        "operationId": "ChangeTeacherPassword",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NewPassword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ChangeVisibleRate": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "summary": "Bir öğretmenin görünen puanını değiştirir. 0.5 ve katları olması gerekir. Şayet 0 olarak ayarlanırsa gerçek puanı gösterilir.",
        "operationId": "ChangeTeacherVisibleRate",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NewRate",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ZoomCreateAccount": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "operationId": "ZoomCreateAccount",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/TeacherAdministration/TeacherHourlyRate": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "operationId": "TeacherHourlyRate",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "HourlyRate",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/TeacherAdministration/TeachersDropdown": {
      "get": {
        "tags": [
          "TeacherAdministration"
        ],
        "operationId": "TeachersDropdown",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advancer.Common.DropDownModelIntCustom"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/TeacherAdministration/TeacherPay": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "operationId": "TeacherPay",
        "parameters": [
          {
            "name": "TeacherId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Mints",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Hours",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "HourlyRate",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Amount",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "PaymentStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AppointmentDetail",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/TeacherAdministration/ListTeacherSalaries": {
      "get": {
        "tags": [
          "TeacherAdministration"
        ],
        "operationId": "ListTeacherSalaries",
        "parameters": [
          {
            "name": "SearchKeyword",
            "in": "query",
            "description": "Öğretmen ismiyle arama yapmayı sağlar.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "Gidilmek istenilen sayfa",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherAdministration.Queries.ListSalariesQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/TeacherAdministration/SalariesStatusUpdate": {
      "post": {
        "tags": [
          "TeacherAdministration"
        ],
        "operationId": "SalariesStatusUpdate",
        "parameters": [
          {
            "name": "TeacherSalariesId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "paymentStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/VideoRecord/List": {
      "get": {
        "tags": [
          "VideoRecord"
        ],
        "summary": "Geçmiş video kayıtlarını listeler.",
        "operationId": "ListVideoRecords",
        "parameters": [
          {
            "name": "LastVideoRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VideoRecord.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/VideoRecord/VideoRecordWatched": {
      "post": {
        "tags": [
          "VideoRecord"
        ],
        "summary": "Geçmiş bir videonun izlediğini sunucuya bildirir.",
        "operationId": "VideoRecordWatched",
        "parameters": [
          {
            "name": "VideoRecordId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorial/VideoWatched": {
      "post": {
        "tags": [
          "WordTutorial"
        ],
        "summary": "Kullanıcının izlediği videoyu sunucuya bildirir.",
        "operationId": "WordTutorialVideoWatched",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/WordTutorial/Favorite": {
      "post": {
        "tags": [
          "WordTutorial"
        ],
        "summary": "Kullanıcının kelime eğitimini favori olarak işaretlemesini sağlar.",
        "operationId": "FavoriteWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorial/Unfavorite": {
      "post": {
        "tags": [
          "WordTutorial"
        ],
        "summary": "Kullanıcının kelime eğitimini favorilerinden çıkartmasını sağlar.",
        "operationId": "UnfavoriteWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorial/Like": {
      "post": {
        "tags": [
          "WordTutorial"
        ],
        "summary": "Kullanıcının kelime eğitimini beğenmesini sağlar.",
        "operationId": "LikeWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorial/Unlike": {
      "post": {
        "tags": [
          "WordTutorial"
        ],
        "summary": "Kullanıcının kelime eğitimini beğenmesini sağlar.",
        "operationId": "UnlikeWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorial/Share": {
      "post": {
        "tags": [
          "WordTutorial"
        ],
        "summary": "Kullanıcı tarafından gerçekleştirilen kelime eğitimi paylaşımını sunucuya bildirir.",
        "operationId": "WordTutorialShared",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/WordTutorial/ListMyFavorites": {
      "get": {
        "tags": [
          "WordTutorial"
        ],
        "summary": "Kişinin favori olarak kaydettiği kelimeleri listeler",
        "operationId": "ListMyFavoriteWordTutorials",
        "parameters": [
          {
            "name": "LastId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorial.Queries.ListMyFavoritesQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Student,Teacher",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialAdministration/List": {
      "get": {
        "tags": [
          "WordTutorialAdministration"
        ],
        "summary": "Kelime eğitimlerini listelemeyi sağlar",
        "operationId": "ListWordTutorialsForAdministration",
        "parameters": [
          {
            "name": "WordTutorialCategoryId",
            "in": "query",
            "description": "Kelime eğitimi kategorisinin Id sini barındırır",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialAdministration/Create": {
      "post": {
        "tags": [
          "WordTutorialAdministration"
        ],
        "summary": "Kelime eğitimi eklemeyi sağlar",
        "operationId": "CreateWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Slug",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "YoutubeUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accent",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LanguageLevel",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.PostWordTutorialTranslation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.PostWordTutorialTranslation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.PostWordTutorialTranslation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.PostWordTutorialTranslation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialAdministration/Update": {
      "post": {
        "tags": [
          "WordTutorialAdministration"
        ],
        "summary": "Kelime eğitimi eklemeyi sağlar",
        "operationId": "UpdateWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WordTutorialCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Slug",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "YoutubeUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Accent",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LanguageLevel",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.PostWordTutorialTranslation"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.PostWordTutorialTranslation"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.PostWordTutorialTranslation"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.PostWordTutorialTranslation"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialAdministration/Delete": {
      "post": {
        "tags": [
          "WordTutorialAdministration"
        ],
        "summary": "Kelime eğitiminin silinmesini sağlar",
        "operationId": "DeleteWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialAdministration/BulkDelete": {
      "post": {
        "tags": [
          "WordTutorialAdministration"
        ],
        "summary": "Kelime eğitimlerinin silinmesini sağlar",
        "operationId": "BulkDeleteWordTutorials",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.DeleteWordTutorialList"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.DeleteWordTutorialList"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.DeleteWordTutorialList"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.DeleteWordTutorialList"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialAdministration/ChangeYoutubeUrl": {
      "post": {
        "tags": [
          "WordTutorialAdministration"
        ],
        "summary": "Kelime eğitiminin youtube linkini değiştirmeyi sağlar",
        "operationId": "ChangeYoutubeUrlOfTheWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "NewYoutubeUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.ChangeYoutubeUrlCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialAdministration/ChangeTranslationContent": {
      "post": {
        "tags": [
          "WordTutorialAdministration"
        ],
        "summary": "Bir çevirinin içeriğinin değiştirilmesini sağlar.",
        "operationId": "ChangeTranslationContentOfTheWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "TranslationLanguageCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NewContent",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialAdministration/ChangeTranslationTextDirection": {
      "post": {
        "tags": [
          "WordTutorialAdministration"
        ],
        "summary": "Bir çevirinin yazım yönünü değiştirir.",
        "operationId": "ChangeTranslationTextDirectionOfTheWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialTranslationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "IsNewStateRightToLeft",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialAdministration/AddTranslation": {
      "post": {
        "tags": [
          "WordTutorialAdministration"
        ],
        "summary": "Kelime eğitimine yeni bir çeviri ekler.",
        "operationId": "AddTranslationToTheWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "LanguageCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsRtlLanguage",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Content",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialAdministration.Commands.AddTranslationCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialAdministration/RemoveTranslation": {
      "post": {
        "tags": [
          "WordTutorialAdministration"
        ],
        "summary": "Kelime eğitiminden bir çevirinin silinmesini sağlar.",
        "operationId": "RemoveTranslationFromTheWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialTranslationId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialCategory/List": {
      "get": {
        "tags": [
          "WordTutorialCategory"
        ],
        "summary": "Kelime eğitimi kategori listesini getirir.",
        "operationId": "ListWordTutorialCategories",
        "parameters": [
          {
            "name": "LastId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialCategory.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/WordTutorialCategory/RefreshWordTutorialsInCategory": {
      "get": {
        "tags": [
          "WordTutorialCategory"
        ],
        "summary": "Varolan kelime eğitimi kategorisinin içerisinde gösterilen kelimeleri rastgele olarak yeniler.",
        "operationId": "RefreshWordTutorialsInCategory",
        "parameters": [
          {
            "name": "CategoryId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialCategory.Queries.RefreshWordTutorialsInCategoryQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/WordTutorialCategory/GetDetails": {
      "get": {
        "tags": [
          "WordTutorialCategory"
        ],
        "summary": "Bir kelime eğitiminin detayını getirir.",
        "operationId": "GetWordTutorialCategoryDetails",
        "parameters": [
          {
            "name": "Slug",
            "in": "query",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "SelectedWordTutorialSlug",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialCategory.Queries.GetDetailsQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/WordTutorialCategory/Search": {
      "get": {
        "tags": [
          "WordTutorialCategory"
        ],
        "summary": "Bulunulan kelime eğitimi kategorisinde kelime araması yapar.",
        "operationId": "SearchInWordTutorialCategory",
        "parameters": [
          {
            "name": "WordTutorialCategorySlug",
            "in": "query",
            "description": "Kelime eğitimi kategorisinin slug'ıdır.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Query",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "LastId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialCategory.Queries.SearchQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/WordTutorialCategoryAdministration/List": {
      "get": {
        "tags": [
          "WordTutorialCategoryAdministration"
        ],
        "summary": "Kelime eğitim kategorilerini listelemeyi sağlar",
        "operationId": "ListWordTutorialCategoriesForAdministration",
        "parameters": [
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ItemPerPage",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SearchKeyword",
            "in": "query",
            "description": "Film kategorisinde arama yapılacak kelime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialCategoryAdministration.Queries.ListQueryResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialCategoryAdministration/Create": {
      "post": {
        "tags": [
          "WordTutorialCategoryAdministration"
        ],
        "summary": "Kelime eğitimi kategorisi eklemeyi sağlar",
        "operationId": "CreateWordTutorialCategory",
        "parameters": [
          {
            "name": "Title",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Slug",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "CoverPhoto": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "CoverPhoto": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialCategoryAdministration.Commands.CreateCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialCategoryAdministration/ChangeTitle": {
      "post": {
        "tags": [
          "WordTutorialCategoryAdministration"
        ],
        "summary": "Kelime eğitimi kategorisinin ismini değiştirmeyi sağlar",
        "operationId": "ChangeTitleOfTheWordTutorialCategory",
        "parameters": [
          {
            "name": "WordTutorialCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WordTutorialCategoryTitle",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialCategoryAdministration/ChangeDescription": {
      "post": {
        "tags": [
          "WordTutorialCategoryAdministration"
        ],
        "summary": "Kelime eğitimi kategorisinin açıklamasını değiştirmeyi sağlar",
        "operationId": "ChangeDescriptionOfTheWordTutorialCategory",
        "parameters": [
          {
            "name": "WordTutorialCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WordTutorialCategoryDescription",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialCategoryAdministration/ChangeSlug": {
      "post": {
        "tags": [
          "WordTutorialCategoryAdministration"
        ],
        "summary": "Kelime eğitimi kategorisinin isim etiketini değiştirmeyi sağlar",
        "operationId": "ChangeSlugOfTheWordTutorialCategory",
        "parameters": [
          {
            "name": "WordTutorialCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "WordTutorialCategorySlug",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialCategoryAdministration/ChangeCoverPhoto": {
      "post": {
        "tags": [
          "WordTutorialCategoryAdministration"
        ],
        "summary": "Kelime eğitimi kategorisinin kapak fotoğrafını değiştirmeyi sağlar",
        "operationId": "ChangeCoverPhotoOfTheWordTutorialCategory",
        "parameters": [
          {
            "name": "WordTutorialCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "NewCoverPhoto": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "NewCoverPhoto": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialCategoryAdministration/Delete": {
      "post": {
        "tags": [
          "WordTutorialCategoryAdministration"
        ],
        "summary": "Kelime eğitimi kategorisini silmeyi sağlar",
        "operationId": "DeleteWordTutorialCategory",
        "parameters": [
          {
            "name": "WordTutorialCategoryId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    },
    "/api/WordTutorialSubtitleAdministration/AddSubtitleToWordTutorial": {
      "post": {
        "tags": [
          "WordTutorialSubtitleAdministration"
        ],
        "summary": "Kelime eğitimine ait yeni bir çeviri dosyası yüklenmesini sağlar.",
        "operationId": "AddSubtitleToWordTutorial",
        "parameters": [
          {
            "name": "WordTutorialId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "SubtitleLanguageCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WordTutorialSubtitleAdministration.Commands.AddSubtitleToWordTutorialCommandResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/WordTutorialSubtitleAdministration/RemoveSubtitleFromWordTutorial": {
      "post": {
        "tags": [
          "WordTutorialSubtitleAdministration"
        ],
        "summary": "Kelime eğitiminden bir altyazı dosyasının silinmesini sağlar.",
        "operationId": "RemoveSubtitleFromWordTutorial",
        "parameters": [
          {
            "name": "SubtitleId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MediatR.Unit"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluentValidation.Results.ValidationFailure"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "417": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [
              "Policy:",
              "Roles:Admin,SuperAdmin",
              "AuthenticationSchemes:"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Administrator.Commands.LoginCommandResult": {
        "required": [
          "jwt"
        ],
        "type": "object",
        "properties": {
          "jwt": {
            "minLength": 1,
            "type": "string",
            "description": "Oluşturulan jwt."
          }
        },
        "additionalProperties": false
      },
      "AdministratorAdministration.Commands.CreateAdministratorCommandResult": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AdministratorAdministration.Queries.AdministratorList": {
        "required": [
          "eMail",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Sistem yöneticisinin Id sini barındırır",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Sistem yöneticisinin ismini barındırır"
          },
          "eMail": {
            "type": "string",
            "description": "Sistem yöneticisinin e-mailini barındırır"
          }
        },
        "additionalProperties": false
      },
      "AdministratorAdministration.Queries.ListAdministratorsPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AdministratorAdministration.Queries.ListQueryResult": {
        "required": [
          "administratorList",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/AdministratorAdministration.Queries.ListAdministratorsPagination"
          },
          "administratorList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdministratorAdministration.Queries.AdministratorList"
            },
            "description": "Sistem yöneticilerinin listesini barındırır"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Common.DropDownModelIntCustom": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "customValue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "teacherMetaDataId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Common.ReferralStatus": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "Advancer.Models.Appointment.AppointmentChangeModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "changedUserId": {
            "type": "integer",
            "format": "int32"
          },
          "changedUser": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          },
          "changedAppointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "changedAppointment": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentModel"
          },
          "createdAppointmentsDueChange": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.JoinTable.CreatedAppointmentDueChangeModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Appointment.AppointmentModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentType": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentType"
          },
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "student": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacher": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          },
          "isPaid": {
            "type": "boolean",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isCancelled": {
            "type": "boolean"
          },
          "cancelledUserId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cancelledUser": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          },
          "cancelReason": {
            "type": "string",
            "nullable": true
          },
          "cancellationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "rateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rate": {
            "$ref": "#/components/schemas/Advancer.Models.Rating.TeacherRateModel"
          },
          "appointmentChangeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointmentChange": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentChangeModel"
          },
          "isVideoRecordUploadCompleted": {
            "type": "boolean"
          },
          "videoRecordUrl": {
            "type": "string",
            "nullable": true
          },
          "videoRecordStartedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "videoRecordEndedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "videoRecordDuration": {
            "type": "string",
            "nullable": true
          },
          "agoraChannel": {
            "$ref": "#/components/schemas/Advancer.Models.Live.AgoraChannelModel"
          },
          "teacherAvailabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.Scheduler.TeacherAvailabilityModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Appointment.AppointmentType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Advancer.Models.Authentication.AppRoleModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserRoleModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Authentication.AppUserModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "avatarPhotoId": {
            "type": "string",
            "nullable": true
          },
          "guid": {
            "type": "string",
            "description": "Güvenlik gerektiren yerlerde(örneğin chat) direk integer id üzerinden işlem yapılmaması gerekebilir.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Kullanıcının ismi",
            "nullable": true
          },
          "lostPasswordToken": {
            "type": "string",
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserRoleModel"
            },
            "nullable": true
          },
          "teacherMetadataId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "teacherMetadata": {
            "$ref": "#/components/schemas/Advancer.Models.RoleMetadata.TeacherMetadataModel"
          },
          "studentMetadataId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "studentMetadata": {
            "$ref": "#/components/schemas/Advancer.Models.RoleMetadata.StudentMetadataModel"
          },
          "isAccountDeletedDueGDPR": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Authentication.AppUserRoleModel": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "roleId": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          },
          "role": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppRoleModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Iyzico.IyzicoSubscriptionPlanModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "dayOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "dayOption": {
            "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionDayOptionModel"
          },
          "minutesPerDayOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "minutesPerDayOption": {
            "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionMinutesPerDayOptionModel"
          },
          "packageDurationOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "packageDurationOption": {
            "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionPackageDurationOptionModel"
          },
          "iyzicoPlanId": {
            "type": "string",
            "nullable": true
          },
          "referralId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "referrals": {
            "$ref": "#/components/schemas/Advancer.Models.Referrals.ReferralModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.JoinTable.CreatedAppointmentDueChangeModel": {
        "type": "object",
        "properties": {
          "appointmentChangeId": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentChange": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentChangeModel"
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "appointment": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.JoinTable.StudentMetadataLanguageLevelModel": {
        "type": "object",
        "properties": {
          "studentMetadataId": {
            "type": "integer",
            "format": "int32"
          },
          "studentMetadata": {
            "$ref": "#/components/schemas/Advancer.Models.RoleMetadata.StudentMetadataModel"
          },
          "languageLevelId": {
            "type": "integer",
            "format": "int32"
          },
          "languageLevel": {
            "$ref": "#/components/schemas/Advancer.Models.Speciality.LanguageLevelModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.JoinTable.TeacherMetadataLanguageLevelModel": {
        "type": "object",
        "properties": {
          "teacherMetadataId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherMetadata": {
            "$ref": "#/components/schemas/Advancer.Models.RoleMetadata.TeacherMetadataModel"
          },
          "languageLevelId": {
            "type": "integer",
            "format": "int32"
          },
          "languageLevel": {
            "$ref": "#/components/schemas/Advancer.Models.Speciality.LanguageLevelModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.JoinTable.TeacherMetadataLessonTypeModel": {
        "type": "object",
        "properties": {
          "teacherMetadataId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherMetadata": {
            "$ref": "#/components/schemas/Advancer.Models.RoleMetadata.TeacherMetadataModel"
          },
          "lessonTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "lessonType": {
            "$ref": "#/components/schemas/Advancer.Models.Speciality.LessonTypeModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.JoinTable.TeacherMetadataTeachingStyleModel": {
        "type": "object",
        "properties": {
          "teacherMetadataId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherMetadata": {
            "$ref": "#/components/schemas/Advancer.Models.RoleMetadata.TeacherMetadataModel"
          },
          "teachingStyleId": {
            "type": "integer",
            "format": "int32"
          },
          "teachingStyle": {
            "$ref": "#/components/schemas/Advancer.Models.Speciality.TeachingStyleModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Live.AgoraChannelModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "liveStreamStartsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "liveStreamEndsAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isLive": {
            "type": "boolean"
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "appointment": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentModel"
          },
          "channelName": {
            "type": "string",
            "format": "uuid"
          },
          "recorderState": {
            "$ref": "#/components/schemas/Advancer.Models.Live.RecorderState"
          },
          "recorderResourceId": {
            "type": "string",
            "nullable": true
          },
          "recorderUid": {
            "type": "string",
            "nullable": true
          },
          "recorderSid": {
            "type": "string",
            "nullable": true
          },
          "whiteBoardRoom": {
            "type": "string",
            "nullable": true
          },
          "roomToken": {
            "type": "string",
            "nullable": true
          },
          "rtmRoomToken": {
            "type": "string",
            "nullable": true
          },
          "rtmRoomTokenTeacher": {
            "type": "string",
            "nullable": true
          },
          "startUrl": {
            "type": "string",
            "nullable": true
          },
          "joinUrl": {
            "type": "string",
            "nullable": true
          },
          "zoomMeetResponse": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Live.RecorderState": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Advancer.Models.Payment.PaymentFinishedAtState": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Advancer.Models.Payment.PaymentModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "ipAddress": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Advancer.Models.Payment.PaymentStatus"
          },
          "paymentFinishedInState": {
            "$ref": "#/components/schemas/Advancer.Models.Payment.PaymentFinishedAtState"
          },
          "iyzicoPricingPlanReferenceCode": {
            "type": "string",
            "nullable": true
          },
          "iyzicoReferenceCode": {
            "type": "string",
            "nullable": true
          },
          "iyzicoParentReferenceCode": {
            "type": "string",
            "nullable": true
          },
          "iyzicoPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "iyzicoPaidPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "iyzicoBasketId": {
            "type": "string",
            "nullable": true
          },
          "iyzicoPaymentChannel": {
            "type": "string",
            "nullable": true
          },
          "iyzicoToken": {
            "type": "string",
            "nullable": true
          },
          "iyzicoTokenExpiredAt": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "iyzicoErrorGroup": {
            "type": "string",
            "nullable": true
          },
          "iyzicoErrorMessage": {
            "type": "string",
            "nullable": true
          },
          "iyzicoErrorCode": {
            "type": "string",
            "nullable": true
          },
          "iyzicoSystemTime": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "iyzicoPaymentId": {
            "type": "string",
            "nullable": true
          },
          "iyzicoCurrency": {
            "type": "string",
            "nullable": true
          },
          "iyzicoInstallment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "iyzicoCommissionFee": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "iyzicoCommissionRateAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "iyzicoCurrencyConversationRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "iyzicoPaymentTransactionId": {
            "type": "string",
            "nullable": true
          },
          "iyzicoConvertedPayoutPaidPrice": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "iyzicoMdStatus": {
            "type": "string",
            "nullable": true
          },
          "isRefunded": {
            "type": "boolean",
            "nullable": true
          },
          "refundedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "refundedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "userSubscriptionId": {
            "type": "integer",
            "format": "int32"
          },
          "userSubscription": {
            "$ref": "#/components/schemas/Advancer.Models.Subscription.UserSubscriptionModel"
          },
          "subscriptionPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/Advancer.Models.Iyzico.IyzicoSubscriptionPlanModel"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "customer": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          },
          "dayOption": {
            "type": "integer",
            "format": "int32"
          },
          "minutesPerDay": {
            "type": "integer",
            "format": "int32"
          },
          "durationAsMonths": {
            "type": "integer",
            "format": "int32"
          },
          "pricePerMinute": {
            "type": "number",
            "format": "double"
          },
          "basePackagePrice": {
            "type": "number",
            "format": "double"
          },
          "packageDurationDiscountRate": {
            "type": "number",
            "format": "double"
          },
          "packagePriceAfterDiscount": {
            "type": "number",
            "format": "double"
          },
          "referralId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "referrals": {
            "$ref": "#/components/schemas/Advancer.Models.Referrals.ReferralModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Payment.PaymentStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Advancer.Models.Rating.TeacherRateModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "student": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacher": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          },
          "appointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "appointment": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentModel"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Referrals.ReferralModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Advancer.Common.ReferralStatus"
          },
          "studentLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availedLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.RoleMetadata.StudentMetadataModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "student": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          },
          "isProfilePictureApproved": {
            "type": "boolean"
          },
          "isBanned": {
            "type": "boolean"
          },
          "banReason": {
            "type": "string",
            "nullable": true
          },
          "banHeldReason": {
            "type": "string",
            "nullable": true
          },
          "bannedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "banHeldAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "activeSubscriptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "activeSubscription": {
            "$ref": "#/components/schemas/Advancer.Models.Subscription.UserSubscriptionModel"
          },
          "accentTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accentType": {
            "$ref": "#/components/schemas/Advancer.Models.Speciality.AccentTypeModel"
          },
          "languageLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.JoinTable.StudentMetadataLanguageLevelModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.RoleMetadata.TeacherMetadataModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacher": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          },
          "isAccountApproved": {
            "type": "boolean"
          },
          "isProfilePictureApproved": {
            "type": "boolean"
          },
          "isBanned": {
            "type": "boolean"
          },
          "isOnline": {
            "type": "boolean"
          },
          "onlineAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "banReason": {
            "type": "string",
            "nullable": true
          },
          "banHeldReason": {
            "type": "string",
            "nullable": true
          },
          "bannedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "banHeldAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "totalLessonCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accentTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "accentType": {
            "$ref": "#/components/schemas/Advancer.Models.Speciality.AccentTypeModel"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "teachingStyles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.JoinTable.TeacherMetadataTeachingStyleModel"
            },
            "nullable": true
          },
          "lessonTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.JoinTable.TeacherMetadataLessonTypeModel"
            },
            "nullable": true
          },
          "languageLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.JoinTable.TeacherMetadataLanguageLevelModel"
            },
            "nullable": true
          },
          "trailerVideoCoverImagePath": {
            "type": "string",
            "nullable": true
          },
          "trailerVideoYoutubeId": {
            "type": "string",
            "nullable": true
          },
          "isZoomCreated": {
            "type": "boolean",
            "nullable": true
          },
          "zoomUserResponse": {
            "type": "string",
            "nullable": true
          },
          "hourlyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bankName": {
            "type": "string",
            "description": "Banka adıdır.\r\nÖrneğin:\r\nTürkiye İş Bankası",
            "nullable": true
          },
          "bankAccountHolderName": {
            "type": "string",
            "description": "Banka hesabının sahibinin adıdır.\r\nÖrneğin:\r\nAhmet Fevzi",
            "nullable": true
          },
          "bankIban": {
            "type": "string",
            "nullable": true
          },
          "rateCache": {
            "type": "number",
            "description": "Öğretmene verilen tüm puanlamaların toplamının, toplamda kaç farklı puanlama yapıldığına bölünmesiyle bulunur.\r\nÖrneğin:\r\n1. Kişi 4 puan verirse\r\n2. Kişi 5 puan verirse\r\n3. Kişi 3.5 puan verirse\r\nRateCache: 12.5 / 3 = 4.166666666666667 olur.",
            "format": "double"
          },
          "sumOfAllRates": {
            "type": "number",
            "description": "Öğretmene verilen tüm puanlamaların toplamını tutar.\r\nÖrneğin:\r\n1. Kişi 4 puan verirse\r\n2. Kişi 5 puan verirse\r\n3. Kişi 3.5 puan verirse\r\nSumOfAllRates: 12.5 olur",
            "format": "double"
          },
          "totalRateCount": {
            "type": "integer",
            "description": "Öğretmene toplamda kaç adet puanlama verildiğini tutar.\r\nÖrneğin:\r\n1. Kişi 4 puan verirse\r\n2. Kişi 5 puan verirse\r\n3. Kişi 3.5 puan verirse\r\nTotalRateCount: 3 olur",
            "format": "int32"
          },
          "visibleRate": {
            "type": "number",
            "description": "Admin panel üzerinden belirlenen, site üzerinde gösterilmesi istenilen fake puanlamayı tutar.",
            "format": "double",
            "nullable": true
          },
          "availabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.Scheduler.TeacherAvailabilityModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Scheduler.TeacherAvailabilityModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "teacherMetadataId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherMetadata": {
            "$ref": "#/components/schemas/Advancer.Models.RoleMetadata.TeacherMetadataModel"
          },
          "availabilityStartDateTime": {
            "type": "string",
            "description": "Minimum şu anki zamandan 1 saat sonrası olmalıdır.\r\nMaksimum şu andan itibaren 2 hafta - 15 dakika sonrası olabilir.\r\nEndDateTime'dan daha sonra olmamalıdır.\r\nEndDateTime ile 15 ve katları kadar farkı olmalıdır.",
            "format": "date-time"
          },
          "availabilityEndDateTime": {
            "type": "string",
            "description": "Minimum şu anki zamandan 1 saat 15 dakika sonrası olmalıdır.\r\nMaksimum şu andan itibaren 2 hafta sonrası olabilir.\r\nStartDateTime'dan daha sonra olmamalıdır.\r\nStartDateTime ile 15 ve katları kadar farkı olmalıdır.",
            "format": "date-time"
          },
          "reservedToAppointmentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reservedToAppointment": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentModel"
          },
          "reservedToStudentId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "reservedToStudent": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Speciality.AccentTypeModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "enumName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Speciality.LanguageLevelModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "enumName": {
            "type": "string",
            "nullable": true
          },
          "teachers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.JoinTable.TeacherMetadataLanguageLevelModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Speciality.LessonTypeModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "enumName": {
            "type": "string",
            "nullable": true
          },
          "teachers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.JoinTable.TeacherMetadataLessonTypeModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Speciality.TeachingStyleModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "enumName": {
            "type": "string",
            "nullable": true
          },
          "teachers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.JoinTable.TeacherMetadataTeachingStyleModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Subscription.SubscriptionDayOptionModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dayOption": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Subscription.SubscriptionMinutesPerDayOptionModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "minutesPerDayOption": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Subscription.SubscriptionPackageDurationOptionModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Süreye verilen başlıktır. Örneğin: \"1 Aylık, 1 Yıl\"\r\n( DİKKAT: Buraya girilecek değerin client üzerinde dil çevirisi karşılığı olmalıdır. Yoksa ingilizce dilinde çeviriler yanlış gösterilir. )",
            "nullable": true
          },
          "durationAsMonths": {
            "type": "integer",
            "description": "Paketin süresini tutar.",
            "format": "int32"
          },
          "discountRate": {
            "type": "number",
            "description": "Toplam paket tutarı üzerine pakete uygulanacak yüzdelik indirimi tutar.",
            "format": "double"
          },
          "description": {
            "type": "string",
            "description": "Süreye ait ek bilgilendirme istenirse bu alana girilebilir. Örneğin: \"Bu paketi alırsanız %40 indirim!\"\r\n( DİKKAT: Buraya girilecek değerin client üzerinde dil çevirisi karşılığı olmalıdır. Yoksa ingilizce dilinde çeviriler yanlış gösterilir. )",
            "nullable": true
          },
          "totalMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dayOptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minuteOptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pricePerMint": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "discountedAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "total": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalDiscounted": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "subscriptionDayOptions": {
            "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionDayOptionModel"
          },
          "subscriptionMinutesPerDayOptions": {
            "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionMinutesPerDayOptionModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.Subscription.UserSubscriptionModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "iyzicoParentReferenceCode": {
            "type": "string",
            "nullable": true
          },
          "paidMonths": {
            "type": "integer",
            "format": "int32"
          },
          "startsAt": {
            "type": "string",
            "format": "date-time"
          },
          "endsAt": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "subscriberId": {
            "type": "integer",
            "format": "int32"
          },
          "subscriber": {
            "$ref": "#/components/schemas/Advancer.Models.RoleMetadata.StudentMetadataModel"
          },
          "subscriptionPlanId": {
            "type": "integer",
            "format": "int32"
          },
          "subscriptionPlan": {
            "$ref": "#/components/schemas/Advancer.Models.Iyzico.IyzicoSubscriptionPlanModel"
          },
          "paymentId": {
            "type": "integer",
            "format": "int32"
          },
          "payment": {
            "$ref": "#/components/schemas/Advancer.Models.Payment.PaymentModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.WordTutorial.WordTutorialFavoriteModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorial": {
            "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialModel"
          },
          "appUserId": {
            "type": "integer",
            "format": "int32"
          },
          "appUser": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.WordTutorial.WordTutorialLikeModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorial": {
            "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialModel"
          },
          "appUserId": {
            "type": "integer",
            "format": "int32"
          },
          "appUser": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.WordTutorial.WordTutorialModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "totalFavoriteCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalLikeCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalVideoViewCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalShareCount": {
            "type": "integer",
            "format": "int32"
          },
          "youtubeVideoId": {
            "type": "string",
            "nullable": true
          },
          "videoCoverImageId": {
            "type": "string",
            "nullable": true
          },
          "accentTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accentType": {
            "$ref": "#/components/schemas/Advancer.Models.Speciality.AccentTypeModel"
          },
          "languageLevelId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "languageLevel": {
            "$ref": "#/components/schemas/Advancer.Models.Speciality.LanguageLevelModel"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialTranslationModel"
            },
            "nullable": true
          },
          "subtitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialSubtitleModel"
            },
            "nullable": true
          },
          "wordTutorialCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialCategory": {
            "$ref": "#/components/schemas/Advancer.Models.WordTutorialCategory.WordTutorialCategoryModel"
          },
          "likes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialLikeModel"
            },
            "nullable": true
          },
          "shares": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialShareModel"
            },
            "nullable": true
          },
          "videoWatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialVideoWatchModel"
            },
            "nullable": true
          },
          "favorites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialFavoriteModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.WordTutorial.WordTutorialShareModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorial": {
            "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialModel"
          },
          "appUserId": {
            "type": "integer",
            "format": "int32"
          },
          "appUser": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.WordTutorial.WordTutorialSubtitleContentModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialSubtitleId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialSubtitle": {
            "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialSubtitleModel"
          },
          "lineContent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.WordTutorial.WordTutorialSubtitleModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorial": {
            "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialModel"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "subtitleFileId": {
            "type": "string",
            "nullable": true
          },
          "subtitleContents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialSubtitleContentModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.WordTutorial.WordTutorialTranslationModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorial": {
            "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialModel"
          },
          "languageCode": {
            "type": "string",
            "nullable": true
          },
          "isRtlLanguage": {
            "type": "boolean"
          },
          "content": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.WordTutorial.WordTutorialVideoWatchModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorial": {
            "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialModel"
          },
          "wordTutorialCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialCategory": {
            "$ref": "#/components/schemas/Advancer.Models.WordTutorialCategory.WordTutorialCategoryModel"
          },
          "appUserId": {
            "type": "integer",
            "format": "int32"
          },
          "appUser": {
            "$ref": "#/components/schemas/Advancer.Models.Authentication.AppUserModel"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Models.WordTutorialCategory.WordTutorialCategoryModel": {
        "required": [
          "createdAt",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "slug": {
            "type": "string",
            "nullable": true
          },
          "coverPhotoId": {
            "type": "string",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean"
          },
          "totalWordTutorials": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.WordTutorial.WordTutorialModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Advancer.Services.Agora.DTO.WhiteBoard.WhiteBoardRoomResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "nullable": true
          },
          "teamUUID": {
            "type": "string",
            "nullable": true
          },
          "appUUID": {
            "type": "string",
            "nullable": true
          },
          "isBan": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Advancer.Services.Agora.DTO.WhiteBoard.WhiteBoardRoomTokenResponse": {
        "type": "object",
        "properties": {
          "roomToken": {
            "type": "string",
            "nullable": true
          },
          "whiteBoardRoom": {
            "$ref": "#/components/schemas/Advancer.Services.Agora.DTO.WhiteBoard.WhiteBoardRoomResponse"
          }
        },
        "additionalProperties": false
      },
      "AllAccounts.Commands.RecoverPasswordCommandResult": {
        "required": [
          "jwt"
        ],
        "type": "object",
        "properties": {
          "jwt": {
            "minLength": 1,
            "type": "string",
            "description": "Kullanıcının jwt bilgisidir."
          }
        },
        "additionalProperties": false
      },
      "AppInfo.Queries.AppStatusQueryResult": {
        "required": [
          "currentAndroidVersion",
          "currentIOSVersion",
          "inMaintenance",
          "minimumAndroidVersion",
          "minimumIOSVersion",
          "pricePerMinute"
        ],
        "type": "object",
        "properties": {
          "minimumAndroidVersion": {
            "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(?:-((?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
            "type": "string",
            "description": "Android uygulamasının kullanılabilir minimum versiyonu. Bu versiyonun altında kalan yüklemelere uygulamayı güncelleme ekranı gözükecektir."
          },
          "currentAndroidVersion": {
            "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(?:-((?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
            "type": "string",
            "description": "Android uygulamasının şu anki versiyonu."
          },
          "minimumIOSVersion": {
            "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(?:-((?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
            "type": "string",
            "description": "IOS uygulamasının şu anki versiyonu."
          },
          "currentIOSVersion": {
            "pattern": "^(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(?:-((?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$",
            "type": "string",
            "description": "IOS uygulamasının şu anki versiyonu."
          },
          "inMaintenance": {
            "type": "boolean",
            "description": "Uygulamanın bakım durumu."
          },
          "pricePerMinute": {
            "type": "number",
            "description": "Dakika başına ücretlendirme.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AppInfo.Queries.TimeStampQueryResult": {
        "type": "object",
        "properties": {
          "timeList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppInfo.Queries.TimeStampRange"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppInfo.Queries.TimeStampRange": {
        "required": [
          "endTime",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string"
          },
          "endTime": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Appointment.Commands.CreateCommandResult": {
        "required": [
          "appointmentId",
          "endTime",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Appointment.Commands.ReportAsStudentCommandResult": {
        "required": [
          "createdAt",
          "reportId",
          "title"
        ],
        "type": "object",
        "properties": {
          "reportId": {
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[4][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Appointment.Commands.ReportAsTeacherCommandResult": {
        "required": [
          "createdAt",
          "reportId",
          "title"
        ],
        "type": "object",
        "properties": {
          "reportId": {
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[4][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Appointment.Commands.SelectedTimeRange": {
        "required": [
          "endDateTime",
          "startDateTime"
        ],
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Appointment.Queries.AppointmentListItem": {
        "required": [
          "appointmentId",
          "endDateTime",
          "isAppointmentDateTimeChangeable",
          "isFreeCall",
          "isRatingCompleted",
          "isVideoCallRoomOpened",
          "startDateTime",
          "student",
          "teacher"
        ],
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "isFreeCall": {
            "type": "boolean"
          },
          "isVideoCallRoomOpened": {
            "type": "boolean"
          },
          "isRatingCompleted": {
            "type": "boolean"
          },
          "isAppointmentDateTimeChangeable": {
            "type": "boolean",
            "description": "Kullanıcının bu randevunun vaktini değiştirme hakkı var ise true döner."
          },
          "teacher": {
            "$ref": "#/components/schemas/Appointment.Queries.TeacherInAppointment"
          },
          "student": {
            "$ref": "#/components/schemas/Appointment.Queries.StudentInAppointment"
          }
        },
        "additionalProperties": false
      },
      "Appointment.Queries.ListAppointmentsPagination": {
        "required": [
          "isNextPageAvailable"
        ],
        "type": "object",
        "properties": {
          "isNextPageAvailable": {
            "type": "boolean"
          },
          "lastId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Appointment.Queries.ListMyAppointmentsQueryResult": {
        "required": [
          "appointments",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Appointment.Queries.ListAppointmentsPagination"
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment.Queries.AppointmentListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "Appointment.Queries.StudentInAppointment": {
        "required": [
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "name",
          "studentGuid",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "studentGuid": {
            "type": "string",
            "format": "uuid"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Appointment.Queries.TeacherInAppointment": {
        "required": [
          "accentType",
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "isOnline",
          "name",
          "rate",
          "teacherGuid",
          "teacherId"
        ],
        "type": "object",
        "properties": {
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherGuid": {
            "type": "string",
            "format": "uuid"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "accentType": {
            "pattern": "^(NATIVE_US|NATIVE_BRITISH|TURKISH|OTHER)$",
            "type": "string",
            "description": "Girilebilecek değerler:\r\nNATIVE_US,\r\nNATIVE_BRITISH,\r\nTURKISH,\r\nOTHER"
          },
          "name": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "rate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AppointmentAdministration.Queries.AppointmentListItem": {
        "required": [
          "appointmentId",
          "endDateTime",
          "isAppointmentDateTimeChangeable",
          "isRatingCompleted",
          "isVideoCallRoomOpened",
          "startDateTime",
          "student",
          "teacher"
        ],
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "isVideoCallRoomOpened": {
            "type": "boolean"
          },
          "isRatingCompleted": {
            "type": "boolean"
          },
          "rating": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isAppointmentDateTimeChangeable": {
            "type": "boolean",
            "description": "Kullanıcının bu randevunun vaktini değiştirme hakkı var ise true döner."
          },
          "teacher": {
            "$ref": "#/components/schemas/AppointmentAdministration.Queries.TeacherInAppointment"
          },
          "student": {
            "$ref": "#/components/schemas/AppointmentAdministration.Queries.StudentInAppointment"
          }
        },
        "additionalProperties": false
      },
      "AppointmentAdministration.Queries.AppointmentsForPayResult": {
        "type": "object",
        "properties": {
          "appointmentId": {
            "type": "integer",
            "format": "int32"
          },
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "studentName": {
            "type": "string",
            "nullable": true
          },
          "startDateTime": {
            "type": "string",
            "nullable": true
          },
          "endDateTime": {
            "type": "string",
            "nullable": true
          },
          "mints": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentType": {
            "type": "string",
            "nullable": true
          },
          "paid": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "AppointmentAdministration.Queries.ListAppointmentsOfTheStudentPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppointmentAdministration.Queries.ListAppointmentsOfTheStudentQueryResult": {
        "required": [
          "appointments",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/AppointmentAdministration.Queries.ListAppointmentsOfTheStudentPagination"
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentAdministration.Queries.AppointmentListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "AppointmentAdministration.Queries.ListAppointmentsOfTheTeacherPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AppointmentAdministration.Queries.ListAppointmentsOfTheTeacherQueryResult": {
        "required": [
          "appointments",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/AppointmentAdministration.Queries.ListAppointmentsOfTheTeacherPagination"
          },
          "appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentAdministration.Queries.AppointmentListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "AppointmentAdministration.Queries.StudentInAppointment": {
        "required": [
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "name",
          "studentGuid",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "studentGuid": {
            "type": "string",
            "format": "uuid"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AppointmentAdministration.Queries.TeacherInAppointment": {
        "required": [
          "accentType",
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "isOnline",
          "name",
          "rate",
          "teacherGuid",
          "teacherId"
        ],
        "type": "object",
        "properties": {
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherGuid": {
            "type": "string",
            "format": "uuid"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "accentType": {
            "pattern": "^(NATIVE_US|NATIVE_BRITISH|TURKISH|OTHER)$",
            "type": "string",
            "description": "Girilebilecek değerler:\r\nNATIVE_US,\r\nNATIVE_BRITISH,\r\nTURKISH,\r\nOTHER"
          },
          "name": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "rate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Chat.Commands.ReportChatAsStudentCommandResult": {
        "required": [
          "createdAt",
          "reportId"
        ],
        "type": "object",
        "properties": {
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Chat.Commands.ReportChatAsTeacherCommandResult": {
        "required": [
          "createdAt",
          "reportId"
        ],
        "type": "object",
        "properties": {
          "reportId": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Chat.Queries.GetChatJwtQueryResult": {
        "required": [
          "chatJwt"
        ],
        "type": "object",
        "properties": {
          "chatJwt": {
            "type": "string",
            "description": "Kullanıcının chat jwtsini barındırır."
          }
        },
        "additionalProperties": false
      },
      "Chat.Queries.GetUserInformationsQueryResult": {
        "required": [
          "userInformations"
        ],
        "type": "object",
        "properties": {
          "userInformations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Chat.Queries.UserInformationList"
            },
            "description": "Kullanıcı bilgilerini barındırır"
          }
        },
        "additionalProperties": false
      },
      "Chat.Queries.UserInformationList": {
        "required": [
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "didUserBannedMe",
          "id",
          "isBanned",
          "userId",
          "visibleName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[4][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "visibleName": {
            "minLength": 1,
            "type": "string",
            "description": "Kullanıcıya ait sistemde açıkça gösterilecek isimdir."
          },
          "isBanned": {
            "type": "boolean"
          },
          "didUserBannedMe": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CustomerService.Commands.SendContactMessageCommandResult": {
        "required": [
          "contactCaseId"
        ],
        "type": "object",
        "properties": {
          "contactCaseId": {
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[4][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomerServiceAdministration.Queries.Complainant": {
        "required": [
          "complainantId",
          "complainantRole",
          "complaininatName"
        ],
        "type": "object",
        "properties": {
          "complainantId": {
            "type": "integer",
            "description": "Şikayet eden kişinin Id sini belirtir",
            "format": "int32"
          },
          "complainantAvatar1X": {
            "type": "string",
            "description": "Şikayet eden kullanıcının profil resminin 1x boyutunda urlsini barındırır",
            "format": "uri",
            "nullable": true
          },
          "complainantAvatar2X": {
            "type": "string",
            "description": "Şikayet eden kullanıcının profil resminin 2x boyutunda urlsini barındırır",
            "format": "uri",
            "nullable": true
          },
          "complainantAvatar3X": {
            "type": "string",
            "description": "Şikayet eden kullanıcının profil resminin 3x boyutunda urlsini barındırır",
            "format": "uri",
            "nullable": true
          },
          "complainantAvatar4X": {
            "type": "string",
            "description": "Şikayet eden kullanıcının profil resminin 3x boyutunda urlsini barındırır",
            "format": "uri",
            "nullable": true
          },
          "complaininatName": {
            "type": "string",
            "description": "Şikayet eden kullanıcının ismini barındırır"
          },
          "complainantRole": {
            "pattern": "^(STUDENT|TEACHER)$",
            "type": "string",
            "description": "Şikayet eden kullanıcının rolünü barındırır"
          }
        },
        "additionalProperties": false
      },
      "CustomerServiceAdministration.Queries.Complained": {
        "required": [
          "complainedId",
          "complainedName"
        ],
        "type": "object",
        "properties": {
          "complainedId": {
            "type": "integer",
            "description": "Şikayet edilen kişinin Id sini belirtir",
            "format": "int32"
          },
          "complainedName": {
            "type": "string",
            "description": "Şikayet edilen kullanıcının ismini barındırır"
          }
        },
        "additionalProperties": false
      },
      "CustomerServiceAdministration.Queries.ComplaintDetails": {
        "required": [
          "complainant",
          "complained",
          "complainId",
          "complaintCategory",
          "complaintContent",
          "complaintDate",
          "complaintState",
          "complaintTitle"
        ],
        "type": "object",
        "properties": {
          "complainId": {
            "type": "integer",
            "description": "Şikayet Idsini barındırır",
            "format": "int32"
          },
          "complainant": {
            "$ref": "#/components/schemas/CustomerServiceAdministration.Queries.Complainant"
          },
          "complained": {
            "$ref": "#/components/schemas/CustomerServiceAdministration.Queries.Complained"
          },
          "complaintDate": {
            "type": "string",
            "description": "Şikayet etme tarihini barındırır",
            "format": "date-time"
          },
          "complaintTitle": {
            "type": "string",
            "description": "Şikayet başlığını barındırır"
          },
          "complaintContent": {
            "type": "string",
            "description": "Şikayet başlığını barındırır"
          },
          "complaintCategory": {
            "pattern": "^(CHAT|APPOINTMENT|USER)$",
            "type": "string",
            "description": "Şikayetin kategorisini barındırır"
          },
          "complaintState": {
            "pattern": "^(NOT_SEEN_YET|SEEN|COMPLETED|REJECTED)$",
            "type": "string",
            "description": "Şikayetin durumunu barındırır"
          },
          "complaintChatSessionId": {
            "type": "string",
            "description": "Şikayet mesaj kategorisindeyse o mesajlaşmanın Id sini barındırır",
            "nullable": true
          },
          "complaintAppointmentId": {
            "type": "integer",
            "description": "Şikayet randevu kategorisindeyse o randevunun Id sini barındırır",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomerServiceAdministration.Queries.GetComplaintQueryResult": {
        "required": [
          "complaint"
        ],
        "type": "object",
        "properties": {
          "complaint": {
            "$ref": "#/components/schemas/CustomerServiceAdministration.Queries.ComplaintDetails"
          }
        },
        "additionalProperties": false
      },
      "CustomerServiceAdministration.Queries.ListComplaintsPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CustomerServiceAdministration.Queries.ListComplaintsQueryResult": {
        "required": [
          "complaintList",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/CustomerServiceAdministration.Queries.ListComplaintsPagination"
          },
          "complaintList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerServiceAdministration.Queries.ComplaintDetails"
            },
            "description": "Şikayetler listesini barındırır"
          }
        },
        "additionalProperties": false
      },
      "FluentValidation.Results.ValidationFailure": {
        "type": "object",
        "properties": {
          "propertyName": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "attemptedValue": {
            "nullable": true
          },
          "customState": {
            "nullable": true
          },
          "severity": {
            "$ref": "#/components/schemas/FluentValidation.Severity"
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "formattedMessageArguments": {
            "type": "array",
            "items": { },
            "nullable": true,
            "deprecated": true
          },
          "formattedMessagePlaceholderValues": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FluentValidation.Severity": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "IyzicoSubscription.Commands.CreateCommand": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "format": "double"
          },
          "dayOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "minutesPerDayOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "packageDurationOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "iyzicoPlanId": {
            "type": "string",
            "nullable": true
          },
          "referralId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IyzicoSubscription.Commands.CreateCommandResult": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IyzicoSubscription.Commands.UpdateCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "dayOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "minutesPerDayOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "packageDurationOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "iyzicoPlanId": {
            "type": "string",
            "nullable": true
          },
          "referralId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IyzicoSubscription.Queries.CommonSubscriptionDropdown": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "mints": {
            "type": "integer",
            "format": "int32"
          },
          "totalDiscounted": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dayOptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minuteOptionId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalMinutes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IyzicoSubscription.Queries.IyzicoSubscriptionDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "dayOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "minutesPerDayOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "packageDurationOptionId": {
            "type": "integer",
            "format": "int32"
          },
          "iyzicoPlanId": {
            "type": "string",
            "nullable": true
          },
          "referralId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IyzicoSubscription.Queries.IyzicoSubscriptionList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "dayOption": {
            "type": "integer",
            "format": "int32"
          },
          "minutesPerDayOption": {
            "type": "integer",
            "format": "int32"
          },
          "packageDurationOption": {
            "type": "string",
            "nullable": true
          },
          "iyzicoPlanId": {
            "type": "string",
            "nullable": true
          },
          "referralCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IyzicoSubscription.Queries.ListIyzicoSubscription": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "IyzicoSubscription.Queries.ListQueryResult": {
        "required": [
          "iyzicoSubscriptionList",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/IyzicoSubscription.Queries.ListIyzicoSubscription"
          },
          "iyzicoSubscriptionList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IyzicoSubscription.Queries.IyzicoSubscriptionList"
            },
            "description": "Kelime eğitimlerinin listesini barındırır"
          }
        },
        "additionalProperties": false
      },
      "LegalDocument.Queries.GetAllQueryResult": {
        "required": [
          "legalDocuments"
        ],
        "type": "object",
        "properties": {
          "legalDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalDocument.Queries.LegalDocumentsListItem"
            },
            "description": "Legal dökümanları barındırır"
          }
        },
        "additionalProperties": false
      },
      "LegalDocument.Queries.LegalDocumentsListItem": {
        "required": [
          "content",
          "id",
          "slug",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LegalDocumentAdministration.Queries.AdminLegalDocumentList": {
        "required": [
          "content",
          "id",
          "slug",
          "title"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "LegalDocumentAdministration.Queries.GetAllQueryResult": {
        "required": [
          "legalDocuments"
        ],
        "type": "object",
        "properties": {
          "legalDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LegalDocumentAdministration.Queries.AdminLegalDocumentList"
            }
          }
        },
        "additionalProperties": false
      },
      "Live.Commands.DirectCallCommandResult": {
        "type": "object",
        "properties": {
          "callId": {
            "type": "integer",
            "format": "int32"
          },
          "appointment": {
            "$ref": "#/components/schemas/Live.Commands.ImmidiatelyAppointment"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endsAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Live.Commands.FreeAppointment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentType": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentType"
          },
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacher": {
            "$ref": "#/components/schemas/Live.Commands.TeacherDetails"
          },
          "student": {
            "$ref": "#/components/schemas/Live.Commands.StudentDetails"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Live.Commands.ImmidiatelyAppointment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentType": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentType"
          },
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacher": {
            "$ref": "#/components/schemas/Live.Commands.TeacherDetailsForDirectCall"
          },
          "student": {
            "$ref": "#/components/schemas/Live.Commands.StudentDetailsForDirectCall"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Live.Commands.JoinToRoomAsStudentCommandResult": {
        "type": "object",
        "properties": {
          "isAccepted": {
            "type": "boolean"
          },
          "channelName": {
            "type": "string",
            "description": "Agora.io'daki görüşmeye ait açılmış kanalın ismidir.",
            "nullable": true
          },
          "uid": {
            "type": "integer",
            "description": "Agora.io'dan verilen kanala katılım id'sidir.",
            "format": "int32",
            "nullable": true
          },
          "token": {
            "type": "string",
            "description": "Agora.io'dan verilen kanala katılım kodudur.",
            "nullable": true
          },
          "sdkToken": {
            "type": "string",
            "nullable": true
          },
          "rtmToken": {
            "type": "string",
            "nullable": true
          },
          "joinUrl": {
            "type": "string",
            "nullable": true
          },
          "whiteBoardRoomDetail": {
            "$ref": "#/components/schemas/Advancer.Services.Agora.DTO.WhiteBoard.WhiteBoardRoomTokenResponse"
          }
        },
        "additionalProperties": false
      },
      "Live.Commands.JoinToRoomAsTeacherCommandResult": {
        "type": "object",
        "properties": {
          "isAccepted": {
            "type": "boolean"
          },
          "channelName": {
            "type": "string",
            "description": "Agora.io'daki görüşmeye ait açılmış kanalın ismidir.",
            "nullable": true
          },
          "uid": {
            "type": "integer",
            "description": "Agora.io'dan verilen kanala katılım id'sidir.",
            "format": "int32",
            "nullable": true
          },
          "token": {
            "type": "string",
            "description": "Agora.io'dan verilen kanala katılım kodudur.",
            "nullable": true
          },
          "sdkToken": {
            "type": "string",
            "nullable": true
          },
          "rtmToken": {
            "type": "string",
            "nullable": true
          },
          "startUrl": {
            "type": "string",
            "nullable": true
          },
          "whiteBoardRoomDetail": {
            "$ref": "#/components/schemas/Advancer.Services.Agora.DTO.WhiteBoard.WhiteBoardRoomTokenResponse"
          }
        },
        "additionalProperties": false
      },
      "Live.Commands.RequestFreeCallCommandResult": {
        "type": "object",
        "properties": {
          "callId": {
            "type": "integer",
            "format": "int32"
          },
          "appointment": {
            "$ref": "#/components/schemas/Live.Commands.FreeAppointment"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endsAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Live.Commands.StudentDetails": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "metadataId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "avatar1X": {
            "type": "string",
            "nullable": true
          },
          "avatar2X": {
            "type": "string",
            "nullable": true
          },
          "avatar3X": {
            "type": "string",
            "nullable": true
          },
          "avatar4X": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Live.Commands.StudentDetailsForDirectCall": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "metadataId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "avatar1X": {
            "type": "string",
            "nullable": true
          },
          "avatar2X": {
            "type": "string",
            "nullable": true
          },
          "avatar3X": {
            "type": "string",
            "nullable": true
          },
          "avatar4X": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Live.Commands.TeacherDetails": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "metadataId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "avatar1X": {
            "type": "string",
            "nullable": true
          },
          "avatar2X": {
            "type": "string",
            "nullable": true
          },
          "avatar3X": {
            "type": "string",
            "nullable": true
          },
          "avatar4X": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Live.Commands.TeacherDetailsForDirectCall": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "metadataId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "avatar1X": {
            "type": "string",
            "nullable": true
          },
          "avatar2X": {
            "type": "string",
            "nullable": true
          },
          "avatar3X": {
            "type": "string",
            "nullable": true
          },
          "avatar4X": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Live.Queries.Appointment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "appointmentType": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentType"
          },
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacher": {
            "$ref": "#/components/schemas/Live.Queries.TeacherDetailsForCall"
          },
          "student": {
            "$ref": "#/components/schemas/Live.Queries.StudentDetailsForCall"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Live.Queries.GetCallQueryResult": {
        "type": "object",
        "properties": {
          "callId": {
            "type": "integer",
            "format": "int32"
          },
          "appointment": {
            "$ref": "#/components/schemas/Live.Queries.Appointment"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "endsAt": {
            "type": "string",
            "format": "date-time"
          },
          "isBothSidesAccepted": {
            "type": "boolean"
          },
          "isStudentAccepted": {
            "type": "boolean"
          },
          "isTeacherAccepted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Live.Queries.GetRoomInfoQueryResult": {
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "appointmentType": {
            "$ref": "#/components/schemas/Advancer.Models.Appointment.AppointmentType"
          },
          "teacher": {
            "$ref": "#/components/schemas/Live.Queries.RoomInfoTeacher"
          },
          "student": {
            "$ref": "#/components/schemas/Live.Queries.RoomInfoStudent"
          }
        },
        "additionalProperties": false
      },
      "Live.Queries.RoomInfoStudent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "avatar1X": {
            "type": "string",
            "nullable": true
          },
          "avatar2X": {
            "type": "string",
            "nullable": true
          },
          "avatar3X": {
            "type": "string",
            "nullable": true
          },
          "avatar4X": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Live.Queries.RoomInfoTeacher": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "avatar1X": {
            "type": "string",
            "nullable": true
          },
          "avatar2X": {
            "type": "string",
            "nullable": true
          },
          "avatar3X": {
            "type": "string",
            "nullable": true
          },
          "avatar4X": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Live.Queries.StudentDetailsForCall": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "metadataId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "avatar1X": {
            "type": "string",
            "nullable": true
          },
          "avatar2X": {
            "type": "string",
            "nullable": true
          },
          "avatar3X": {
            "type": "string",
            "nullable": true
          },
          "avatar4X": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Live.Queries.TeacherDetailsForCall": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "metadataId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "avatar1X": {
            "type": "string",
            "nullable": true
          },
          "avatar2X": {
            "type": "string",
            "nullable": true
          },
          "avatar3X": {
            "type": "string",
            "nullable": true
          },
          "avatar4X": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MediatR.Unit": {
        "type": "object",
        "additionalProperties": false
      },
      "Payment.Commands.BillingAddress": {
        "type": "object",
        "properties": {
          "identityNumber": {
            "type": "string",
            "nullable": true
          },
          "registrationAddress": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Payment.Commands.SubscriptionCommandResult": {
        "type": "object",
        "properties": {
          "subscriptionFormContent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Payment.Commands.SubscriptionPackageDetails": {
        "type": "object",
        "properties": {
          "packageDurationId": {
            "type": "integer",
            "description": "Kullanıcının haftada kaç gün ders almak istediğinin bilgisi",
            "format": "int32"
          },
          "referralId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/Payment.Commands.BillingAddress"
          }
        },
        "additionalProperties": false
      },
      "Payment.Queries.ListDropDownSubscriptionOptionsQueryResult": {
        "required": [
          "dayPossibilities",
          "minutesPerDayPossibilities",
          "pricePerMinute"
        ],
        "type": "object",
        "properties": {
          "pricePerMinute": {
            "type": "number",
            "description": "Her dakika başına ücret",
            "format": "double"
          },
          "dayPossibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionDayOptionModel"
            },
            "description": "Paketlerin haftada kaç gün olabileceklerinin listesi"
          },
          "minutesPerDayPossibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionMinutesPerDayOptionModel"
            },
            "description": "Aboneliğin günde kaç dakika olabileceği"
          },
          "packageDurationPossibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionPackageDurationOptionModel"
            },
            "description": "Ödeme süre seçeneklerininin listesi.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Payment.Queries.ListSubscriptionOptionsQueryResult": {
        "required": [
          "dayPossibilities",
          "minutesPerDayPossibilities",
          "packageDurationPossibilities",
          "pricePerMinute"
        ],
        "type": "object",
        "properties": {
          "pricePerMinute": {
            "type": "number",
            "description": "Her dakika başına ücret",
            "format": "double"
          },
          "dayPossibilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Paketlerin haftada kaç gün olabileceklerinin listesi"
          },
          "minutesPerDayPossibilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Aboneliğin günde kaç dakika olabileceği"
          },
          "packageDurationPossibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment.Queries.PaymentInterval"
            },
            "description": "Ödeme süre seçeneklerininin listesi."
          }
        },
        "additionalProperties": false
      },
      "Payment.Queries.PaymentInterval": {
        "required": [
          "durationValue"
        ],
        "type": "object",
        "properties": {
          "durationValue": {
            "type": "integer",
            "description": "Belirlenen sürenin değeridir. Ay cinsindendir.",
            "format": "int32"
          },
          "discount": {
            "type": "number",
            "description": "İndirim oranı",
            "format": "double",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "description": "Örneğin: 1 aylık paket 20% indirimli!",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PromotionAdministration.Commands.CreateDiscountCommandResult": {
        "required": [
          "createdDiscountCodeId"
        ],
        "type": "object",
        "properties": {
          "createdDiscountCodeId": {
            "type": "integer",
            "description": "Oluşturulan indirim kodunun id'sidir.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PromotionAdministration.Queries.DiscountsListItem": {
        "required": [
          "code",
          "discountPercentage",
          "id",
          "isActive"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "İndirim kodunun Idsini belirtir",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "İndirim kodunun adını belirtir"
          },
          "discountPercentage": {
            "type": "number",
            "description": "İndirim kodunun yüzdesini",
            "format": "double"
          },
          "isActive": {
            "type": "boolean",
            "description": "İndirim kodunun aktiflik durumunu"
          }
        },
        "additionalProperties": false
      },
      "PromotionAdministration.Queries.ListDiscountsPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PromotionAdministration.Queries.ListDiscountsQueryResult": {
        "required": [
          "discountsList",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/PromotionAdministration.Queries.ListDiscountsPagination"
          },
          "discountsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionAdministration.Queries.DiscountsListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "Referral.Commands.CreateCommand": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "studentLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Referral.Commands.CreateCommandResult": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Referral.Commands.UpdateCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "studentLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Referral.Commands.UpdateStatusCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/Advancer.Common.ReferralStatus"
          }
        },
        "additionalProperties": false
      },
      "Referral.Queries.ListQueryResult": {
        "required": [
          "pagination",
          "referralList"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Referral.Queries.ListReferralPagination"
          },
          "referralList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Referral.Queries.ReferralList"
            },
            "description": "Kelime eğitimlerinin listesini barındırır"
          }
        },
        "additionalProperties": false
      },
      "Referral.Queries.ListReferralPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Referral.Queries.ListReferralStudentPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Referral.Queries.ListStudentQueryResult": {
        "required": [
          "pagination",
          "referralStudentList"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Referral.Queries.ListReferralStudentPagination"
          },
          "referralStudentList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Referral.Queries.ReferralStudentList"
            },
            "description": "Kelime eğitimlerinin listesini barındırır"
          }
        },
        "additionalProperties": false
      },
      "Referral.Queries.ReferralDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Advancer.Common.ReferralStatus"
          },
          "studentLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availedLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDeleted": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Referral.Queries.ReferralDropdown": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Referral.Queries.ReferralList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "studentLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "availedLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/Advancer.Common.ReferralStatus"
          }
        },
        "additionalProperties": false
      },
      "Referral.Queries.ReferralStudentList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "code": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Referral.Queries.ReferralValidationDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "discount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "valid": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Scheduler.Commands.SchedulerChange": {
        "required": [
          "date",
          "timeRanges"
        ],
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Hangi tarihin güncelleneceği",
            "format": "date-time"
          },
          "timeRanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Scheduler.Commands.SchedulerTimeRange"
            },
            "description": "Hangi zaman aralıklarının eklendiği ve çıkarıldığını tutar"
          }
        },
        "additionalProperties": false
      },
      "Scheduler.Commands.SchedulerTimeRange": {
        "required": [
          "endTime",
          "isAdded",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "isAdded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Scheduler.Queries.AvailableDate": {
        "required": [
          "endTime",
          "startTime"
        ],
        "type": "object",
        "properties": {
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Scheduler.Queries.GetMyAvailableTimesQueryResult": {
        "required": [
          "availableDates"
        ],
        "type": "object",
        "properties": {
          "availableDates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Scheduler.Queries.AvailableDate"
            },
            "description": "Öğretmenin önceden işaretlemiş olduğu uygun gün ve saatlerini barındırır."
          }
        },
        "additionalProperties": false
      },
      "Student.Commands.CreatedPhotoInfo": {
        "required": [
          "x1_64x64",
          "x2_128x128",
          "x3_192x192",
          "x4_256x256"
        ],
        "type": "object",
        "properties": {
          "x1_64x64": {
            "type": "string",
            "description": "64x64 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x2_128x128": {
            "type": "string",
            "description": "128x128 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x3_192x192": {
            "type": "string",
            "description": "192x192 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x4_256x256": {
            "type": "string",
            "description": "256x256 boyutlarında imajın url adresidir.",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "Student.Commands.LoginWithDirectAuthCommandResult": {
        "required": [
          "jwt"
        ],
        "type": "object",
        "properties": {
          "jwt": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Student.Commands.RegisterCommandResult": {
        "required": [
          "jwt"
        ],
        "type": "object",
        "properties": {
          "jwt": {
            "minLength": 1,
            "type": "string",
            "description": "Kullanıcının jwt bilgisidir."
          }
        },
        "additionalProperties": false
      },
      "Student.Commands.StartToExportMyAllInformationsCommandResult": {
        "required": [
          "exportCaseId"
        ],
        "type": "object",
        "properties": {
          "exportCaseId": {
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[4][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Student.Commands.UpdateMySpecalitiesParemeters": {
        "required": [
          "languageLevel"
        ],
        "type": "object",
        "properties": {
          "languageLevel": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Girilebilecek değerler:\r\nBEGINNER,\r\nINTERMEDIATE,\r\nADVANCED"
          },
          "accentType": {
            "pattern": "^(NATIVE_US|NATIVE_BRITISH|TURKISH|OTHER)$",
            "type": "string",
            "description": "Girilebilecek değerler:\r\nNATIVE_US,\r\nNATIVE_BRITISH,\r\nTURKISH,\r\nOTHER",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Student.Commands.UpdateProfilePhotoCommandResult": {
        "required": [
          "createdPhotoInfo"
        ],
        "type": "object",
        "properties": {
          "createdPhotoInfo": {
            "$ref": "#/components/schemas/Student.Commands.CreatedPhotoInfo"
          }
        },
        "additionalProperties": false
      },
      "Student.Queries.ExportedAccountInfo": {
        "required": [
          "createdAt",
          "exportId",
          "isFileReady"
        ],
        "type": "object",
        "properties": {
          "exportId": {
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[4][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isFileReady": {
            "type": "boolean"
          },
          "zippedFileUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Student.Queries.GetDetailsQueryResult": {
        "required": [
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "name",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "studentGuid": {
            "type": "string",
            "format": "uuid"
          },
          "avatar1X": {
            "type": "string",
            "format": "uri"
          },
          "avatar2X": {
            "type": "string",
            "format": "uri"
          },
          "avatar3X": {
            "type": "string",
            "format": "uri"
          },
          "avatar4X": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Student.Queries.GetMyDetailsQueryResult": {
        "required": [
          "accentType",
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "canMakeFreeCall",
          "email",
          "isAvatarApproved",
          "isPremium",
          "languageLevels",
          "metadataId",
          "name",
          "phoneNumber",
          "premiumInformation",
          "remainingCredits",
          "studentGuid",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "metadataId": {
            "type": "integer",
            "format": "int32"
          },
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "studentGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isAvatarApproved": {
            "type": "boolean"
          },
          "isPremium": {
            "type": "boolean"
          },
          "premiumInformation": {
            "$ref": "#/components/schemas/Student.Queries.PremiumInformation"
          },
          "remainingCredits": {
            "type": "integer",
            "format": "int32"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "canMakeFreeCall": {
            "type": "boolean"
          },
          "currentCall": {
            "$ref": "#/components/schemas/Live.Queries.GetCallQueryResult"
          },
          "accentType": {
            "type": "string"
          },
          "languageLevels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "Student.Queries.ListMyExportsPagination": {
        "required": [
          "isNextPageAvailable"
        ],
        "type": "object",
        "properties": {
          "isNextPageAvailable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Student.Queries.ListMyExportsQueryResult": {
        "required": [
          "exportedAccountInfo",
          "listMyExportsPagination"
        ],
        "type": "object",
        "properties": {
          "listMyExportsPagination": {
            "$ref": "#/components/schemas/Student.Queries.ListMyExportsPagination"
          },
          "exportedAccountInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Student.Queries.ExportedAccountInfo"
            }
          }
        },
        "additionalProperties": false
      },
      "Student.Queries.PremiumInformation": {
        "type": "object",
        "properties": {
          "daysPerWeek": {
            "type": "integer",
            "format": "int32"
          },
          "minutesPerDay": {
            "type": "integer",
            "format": "int32"
          },
          "paymentDurationAsMonths": {
            "type": "integer",
            "format": "int32"
          },
          "pricePerMinute": {
            "type": "number",
            "format": "double"
          },
          "durationDiscount": {
            "type": "number",
            "format": "double"
          },
          "basePackagePrice": {
            "type": "number",
            "format": "double"
          },
          "priceAfterDurationDiscount": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "StudentAdministration.Commands.ChangeProfilePictureCommandResult": {
        "required": [
          "createdPhotoInfo"
        ],
        "type": "object",
        "properties": {
          "createdPhotoInfo": {
            "$ref": "#/components/schemas/StudentAdministration.Commands.CreatedPhotoInfo"
          }
        },
        "additionalProperties": false
      },
      "StudentAdministration.Commands.CreatedPhotoInfo": {
        "required": [
          "x1_64x64",
          "x2_128x128",
          "x3_192x192",
          "x4_256x256"
        ],
        "type": "object",
        "properties": {
          "x1_64x64": {
            "type": "string",
            "description": "64x64 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x2_128x128": {
            "type": "string",
            "description": "128x128 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x3_192x192": {
            "type": "string",
            "description": "192x192 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x4_256x256": {
            "type": "string",
            "description": "256x256 boyutlarında imajın url adresidir.",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "StudentAdministration.Queries.GetStudentDetailsQueryResult": {
        "required": [
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "email",
          "isAvatarApproved",
          "isBanned",
          "isPremium",
          "metadataId",
          "name",
          "phoneNumber",
          "studentGuid",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "metadataId": {
            "type": "integer",
            "format": "int32"
          },
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "studentGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isAvatarApproved": {
            "type": "boolean"
          },
          "isBanned": {
            "type": "boolean"
          },
          "banReason": {
            "type": "string",
            "nullable": true
          },
          "bannedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "banHeldReason": {
            "type": "string",
            "nullable": true
          },
          "banHeldAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isPremium": {
            "type": "boolean"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "StudentAdministration.Queries.ListQueryResult": {
        "required": [
          "students",
          "studentsPagination"
        ],
        "type": "object",
        "properties": {
          "studentsPagination": {
            "$ref": "#/components/schemas/StudentAdministration.Queries.StudentsPagination"
          },
          "students": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentAdministration.Queries.StudentsListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "StudentAdministration.Queries.StudentsListItem": {
        "required": [
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "eMail",
          "id",
          "isBanned",
          "name",
          "registeredAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "registeredAt": {
            "type": "string",
            "format": "date-time"
          },
          "avatar1X": {
            "type": "string",
            "format": "uri"
          },
          "avatar2X": {
            "type": "string",
            "format": "uri"
          },
          "avatar3X": {
            "type": "string",
            "format": "uri"
          },
          "avatar4X": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          },
          "eMail": {
            "type": "string"
          },
          "isBanned": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "StudentAdministration.Queries.StudentsPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StudentCredit.Commands.CreateCommand": {
        "type": "object",
        "properties": {
          "studentMetadataId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "earnedCredits": {
            "type": "integer",
            "format": "int32"
          },
          "remainingCredits": {
            "type": "integer",
            "format": "int32"
          },
          "spentCredits": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StudentCredit.Commands.CreateCommandResult": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StudentCredit.Commands.UpdateCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "studentMetadataId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "earnedCredits": {
            "type": "integer",
            "format": "int32"
          },
          "remainingCredits": {
            "type": "integer",
            "format": "int32"
          },
          "spentCredits": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StudentCredit.Queries.CommonDropdown": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StudentCredit.Queries.ListQueryResult": {
        "required": [
          "pagination",
          "studentCreditList"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/StudentCredit.Queries.ListStudentCredit"
          },
          "studentCreditList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudentCredit.Queries.StudentCreditList"
            },
            "description": "Kelime eğitimlerinin listesini barındırır"
          }
        },
        "additionalProperties": false
      },
      "StudentCredit.Queries.ListStudentCredit": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StudentCredit.Queries.StudentCreditDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "studentMetadataId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "earnedCredits": {
            "type": "integer",
            "format": "int32"
          },
          "remainingCredits": {
            "type": "integer",
            "format": "int32"
          },
          "spentCredits": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "StudentCredit.Queries.StudentCreditList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "studentMetadataId": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "earnedCredits": {
            "type": "integer",
            "format": "int32"
          },
          "remainingCredits": {
            "type": "integer",
            "format": "int32"
          },
          "spentCredits": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionAdministration.Commands.AddPackageDurationOptionCommandResult": {
        "required": [
          "createdPackageDurationId"
        ],
        "type": "object",
        "properties": {
          "createdPackageDurationId": {
            "type": "integer",
            "description": "Oluşturulan paket süresinin id'sidir.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionAdministration.Queries.ListSubscriptionDropdownOptionsQueryResult": {
        "required": [
          "dayPossibilities",
          "minutesPerDayPossibilities",
          "pricePerMinute"
        ],
        "type": "object",
        "properties": {
          "pricePerMinute": {
            "type": "number",
            "description": "Her dakika başına ücret",
            "format": "double"
          },
          "dayPossibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionDayOptionModel"
            },
            "description": "Paketlerin haftada kaç gün olabileceklerinin listesi"
          },
          "minutesPerDayPossibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionMinutesPerDayOptionModel"
            },
            "description": "Aboneliğin günde kaç dakika olabileceği"
          },
          "packageDurationPossibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advancer.Models.Subscription.SubscriptionPackageDurationOptionModel"
            },
            "description": "Ödeme süre seçeneklerininin listesi.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionAdministration.Queries.ListSubscriptionOptionsQueryResult": {
        "required": [
          "dayPossibilities",
          "minutesPerDayPossibilities",
          "packageDurationPossibilities",
          "pricePerMinute"
        ],
        "type": "object",
        "properties": {
          "pricePerMinute": {
            "type": "number",
            "description": "Her dakika başına ücret",
            "format": "double"
          },
          "dayPossibilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Paketlerin haftada kaç gün olabileceklerinin listesi"
          },
          "minutesPerDayPossibilities": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Aboneliğin günde kaç dakika olabileceği"
          },
          "packageDurationPossibilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionAdministration.Queries.PaymentInterval"
            },
            "description": "Ödeme süre seçeneklerininin listesi."
          }
        },
        "additionalProperties": false
      },
      "SubscriptionAdministration.Queries.PaymentInterval": {
        "required": [
          "durationUnit",
          "durationValue",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "durationValue": {
            "type": "integer",
            "description": "Belirlenen sürenin değeridir. Süre birimi (hafta, ay, yıl) ile birlikte anlamlı hale gelir.",
            "format": "int32"
          },
          "durationUnit": {
            "pattern": "^(WEEK|MONTH|YEAR)$",
            "type": "string"
          },
          "discount": {
            "type": "number",
            "description": "İndirim oranı",
            "format": "double",
            "nullable": true
          },
          "shortDescription": {
            "type": "string",
            "description": "Örneğin: 1 aylık paket 20% indirimli!",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Teacher.Commands.CreatedPhotoInfo": {
        "required": [
          "x1_64x64",
          "x2_128x128",
          "x3_192x192",
          "x4_256x256"
        ],
        "type": "object",
        "properties": {
          "x1_64x64": {
            "type": "string",
            "description": "64x64 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x2_128x128": {
            "type": "string",
            "description": "128x128 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x3_192x192": {
            "type": "string",
            "description": "192x192 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x4_256x256": {
            "type": "string",
            "description": "256x256 boyutlarında imajın url adresidir.",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "Teacher.Commands.LoginWithDirectAuthCommandResult": {
        "required": [
          "jwt"
        ],
        "type": "object",
        "properties": {
          "jwt": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Teacher.Commands.RegisterCommandResult": {
        "required": [
          "jwt"
        ],
        "type": "object",
        "properties": {
          "jwt": {
            "minLength": 1,
            "type": "string",
            "description": "Kayıt sonrasında oluşan jwt bilgisidir."
          }
        },
        "additionalProperties": false
      },
      "Teacher.Commands.StartToExportMyAllInformationsCommandResult": {
        "required": [
          "exportCaseId"
        ],
        "type": "object",
        "properties": {
          "exportCaseId": {
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[4][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Teacher.Commands.UpdateMySpecalitiesParemeters": {
        "required": [
          "languageLevel",
          "lessonTypes",
          "teachingStyles"
        ],
        "type": "object",
        "properties": {
          "teachingStyles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Girilebilecek değerler:\r\nKIND_AND_PATIENT,\r\nFUN_AND_GREGARIOUS,\r\nSCHOLARLY_AND_KNOWLEDGEABLE"
          },
          "lessonTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Girilebilecek değerler:\r\nPRONUNCIATION_LESSONS,\r\nGRAMMAR_LESSONS,\r\nLESSONS_WITH_MOVIES,\r\nLESSONS_FOR_CHILDREN,\r\nBUSINESS_ENGLISH,\r\nUNIVERSITY_ENGLISH_PREPARATION,\r\nEXAM,\r\nTOEFL_PREPARATION,\r\nIELTS_PREPARATION"
          },
          "languageLevel": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Girilebilecek değerler:\r\nBEGINNER,\r\nINTERMEDIATE,\r\nADVANCED"
          },
          "accentType": {
            "pattern": "^(NATIVE_US|NATIVE_BRITISH|TURKISH|OTHER)$",
            "type": "string",
            "description": "Girilebilecek değerler:\r\nNATIVE_US,\r\nNATIVE_BRITISH,\r\nTURKISH,\r\nOTHER",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Teacher.Commands.UpdateProfilePhotoCommandResult": {
        "required": [
          "createdPhotoInfo"
        ],
        "type": "object",
        "properties": {
          "createdPhotoInfo": {
            "$ref": "#/components/schemas/Teacher.Commands.CreatedPhotoInfo"
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.Availability": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "idOfBoundedAppointment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.ExportedAccountInfo": {
        "required": [
          "createdAt",
          "exportId",
          "isFileReady"
        ],
        "type": "object",
        "properties": {
          "exportId": {
            "pattern": "^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[4][0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isFileReady": {
            "type": "boolean"
          },
          "zippedFileUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.FreeAppointmentRange": {
        "type": "object",
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "isMine": {
            "type": "boolean"
          },
          "idOfBoundedAppointment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.GetDetailsQueryResult": {
        "required": [
          "accentType",
          "availableForFreeCall",
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "description",
          "freeAppointmentRanges",
          "hasFreeAppointmentRanges",
          "isOnline",
          "name",
          "rate",
          "specalities",
          "teacherId",
          "trailerVideo"
        ],
        "type": "object",
        "properties": {
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherGuid": {
            "type": "string",
            "format": "uuid"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "accentType": {
            "pattern": "^(NATIVE_US|NATIVE_BRITISH|TURKISH|OTHER)$",
            "type": "string",
            "description": "Girilebilecek değerler:\r\nNATIVE_US,\r\nNATIVE_BRITISH,\r\nTURKISH,\r\nOTHER"
          },
          "name": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "availableForFreeCall": {
            "type": "boolean"
          },
          "hasFreeAppointmentRanges": {
            "type": "boolean"
          },
          "freeAppointmentRanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Teacher.Queries.FreeAppointmentRange"
            }
          },
          "trailerVideo": {
            "$ref": "#/components/schemas/Teacher.Queries.TrailerVideo"
          },
          "specalities": {
            "$ref": "#/components/schemas/Teacher.Queries.Specalities"
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.GetMyDetailsQueryResult": {
        "required": [
          "accentType",
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "description",
          "email",
          "freeAppointmentRanges",
          "isAvatarApproved",
          "isBankAccountSet",
          "isOnline",
          "languageLevels",
          "lessonTypes",
          "metadataId",
          "name",
          "phoneNumber",
          "rate",
          "teacherGuid",
          "teacherId",
          "teachingStyles",
          "youtubeVideoUrl"
        ],
        "type": "object",
        "properties": {
          "metadataId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "youtubeVideoUrl": {
            "type": "string",
            "format": "uri"
          },
          "isBankAccountSet": {
            "type": "boolean"
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "bankAccountHolderName": {
            "type": "string",
            "nullable": true
          },
          "bankIban": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "accentType": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "isAvatarApproved": {
            "type": "boolean"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "languageLevels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lessonTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "teachingStyles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "freeAppointmentRanges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Teacher.Queries.Availability"
            }
          },
          "currentCall": {
            "$ref": "#/components/schemas/Live.Queries.GetCallQueryResult"
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.ListFavoriteTeachersPagination": {
        "required": [
          "isNextPageAvailable"
        ],
        "type": "object",
        "properties": {
          "isNextPageAvailable": {
            "type": "boolean"
          },
          "lastTeacherId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.ListMyExportsPagination": {
        "required": [
          "isNextPageAvailable"
        ],
        "type": "object",
        "properties": {
          "lastId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isNextPageAvailable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.ListMyExportsQueryResult": {
        "required": [
          "exportedAccountInfo",
          "listMyExportsPagination"
        ],
        "type": "object",
        "properties": {
          "listMyExportsPagination": {
            "$ref": "#/components/schemas/Teacher.Queries.ListMyExportsPagination"
          },
          "exportedAccountInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Teacher.Queries.ExportedAccountInfo"
            }
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.ListMyFavoritesQueryResult": {
        "required": [
          "pagination",
          "teachers"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Teacher.Queries.ListFavoriteTeachersPagination"
          },
          "teachers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Teacher.Queries.TeacherListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.ListQueryResult": {
        "required": [
          "pagination",
          "teachers"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/Teacher.Queries.ListTeachersPagination"
          },
          "teachers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Teacher.Queries.TeacherListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.ListTeachersPagination": {
        "required": [
          "isNextPageAvailable"
        ],
        "type": "object",
        "properties": {
          "isNextPageAvailable": {
            "type": "boolean"
          },
          "lastId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.MyEarningsQueryResult": {
        "required": [
          "last30DaysEarnings",
          "totalEarnings",
          "totalHours",
          "totalMinutes"
        ],
        "type": "object",
        "properties": {
          "totalMinutes": {
            "type": "integer",
            "description": "Son ücret yatırılmasından itibaren ders verdiği toplam süredir.",
            "format": "int32"
          },
          "totalHours": {
            "type": "number",
            "format": "double"
          },
          "last30DaysEarnings": {
            "type": "number",
            "description": "Son 30 gün içerisinde kazandığı ücrettir.",
            "format": "double"
          },
          "totalEarnings": {
            "type": "number",
            "description": "Kayıt olduğundan beri kazandığı ücrettir.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.MyRatingResultList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "teacherName": {
            "type": "string",
            "nullable": true
          },
          "studentName": {
            "type": "string",
            "nullable": true
          },
          "avatar1X": {
            "type": "string",
            "nullable": true
          },
          "avatar2X": {
            "type": "string",
            "nullable": true
          },
          "avatar3X": {
            "type": "string",
            "nullable": true
          },
          "avatar4X": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "comments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.Specalities": {
        "required": [
          "languageLevel",
          "lessonTypes",
          "teachingStyles"
        ],
        "type": "object",
        "properties": {
          "teachingStyles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Girilebilecek değerler:\r\nKIND_AND_PATIENT,\r\nFUN_AND_GREGARIOUS,\r\nSCHOLARLY_AND_KNOWLEDGEABLE"
          },
          "lessonTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Girilebilecek değerler:\r\nPRONUNCIATION_LESSONS,\r\nGRAMMAR_LESSONS,\r\nLESSONS_WITH_MOVIES,\r\nLESSONS_FOR_CHILDREN,\r\nBUSINESS_ENGLISH,\r\nUNIVERSITY_ENGLISH_PREPARATION,\r\nEXAM,\r\nTOEFL_PREPARATION,\r\nIELTS_PREPARATION"
          },
          "languageLevel": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Girilebilecek değerler:\r\nBEGINNER,\r\nINTERMEDIATE,\r\nADVANCED"
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.TeacherListItem": {
        "required": [
          "accentType",
          "availableForFreeCall",
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "description",
          "hasFreeAppointmentRanges",
          "isOnline",
          "name",
          "rate",
          "teacherId",
          "trailerVideo"
        ],
        "type": "object",
        "properties": {
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherGuid": {
            "type": "string",
            "format": "uuid"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "accentType": {
            "pattern": "^(NATIVE_US|NATIVE_BRITISH|TURKISH|OTHER)$",
            "type": "string",
            "description": "Girilebilecek değerler:\r\nNATIVE_US,\r\nNATIVE_BRITISH,\r\nTURKISH,\r\nOTHER"
          },
          "name": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "availableForFreeCall": {
            "type": "boolean"
          },
          "hasFreeAppointmentRanges": {
            "type": "boolean"
          },
          "trailerVideo": {
            "$ref": "#/components/schemas/Teacher.Queries.TrailerVideo"
          },
          "totalLessonCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Teacher.Queries.TrailerVideo": {
        "required": [
          "coverImage1X",
          "coverImage2X",
          "coverImage3X",
          "coverImage4X",
          "videoUrl"
        ],
        "type": "object",
        "properties": {
          "coverImage1X": {
            "type": "string"
          },
          "coverImage2X": {
            "type": "string"
          },
          "coverImage3X": {
            "type": "string"
          },
          "coverImage4X": {
            "type": "string"
          },
          "videoUrl": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "TeacherAdministration.Commands.ChangeProfilePictureCommandResult": {
        "required": [
          "createdPhotoInfo"
        ],
        "type": "object",
        "properties": {
          "createdPhotoInfo": {
            "$ref": "#/components/schemas/TeacherAdministration.Commands.CreatedPhotoInfo"
          }
        },
        "additionalProperties": false
      },
      "TeacherAdministration.Commands.CreatedPhotoInfo": {
        "required": [
          "x1_64x64",
          "x2_128x128",
          "x3_192x192",
          "x4_256x256"
        ],
        "type": "object",
        "properties": {
          "x1_64x64": {
            "type": "string",
            "description": "64x64 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x2_128x128": {
            "type": "string",
            "description": "128x128 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x3_192x192": {
            "type": "string",
            "description": "192x192 boyutlarında imajın url adresidir.",
            "format": "uri"
          },
          "x4_256x256": {
            "type": "string",
            "description": "256x256 boyutlarında imajın url adresidir.",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "TeacherAdministration.Commands.Specalities": {
        "type": "object",
        "properties": {
          "teachingStyles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Girilebilecek değerler:\r\nKIND_AND_PATIENT,\r\nFUN_AND_GREGARIOUS,\r\nSCHOLARLY_AND_KNOWLEDGEABLE",
            "nullable": true
          },
          "lessonTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Girilebilecek değerler:\r\nPRONUNCIATION_LESSONS,\r\nGRAMMAR_LESSONS,\r\nLESSONS_WITH_MOVIES,\r\nLESSONS_FOR_CHILDREN,\r\nBUSINESS_ENGLISH,\r\nUNIVERSITY_ENGLISH_PREPARATION,\r\nEXAM,\r\nTOEFL_PREPARATION,\r\nIELTS_PREPARATION",
            "nullable": true
          },
          "languageLevel": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Girilebilecek değerler:\r\nBEGINNER,\r\nINTERMEDIATE,\r\nADVANCED",
            "nullable": true
          },
          "accent": {
            "pattern": "^(NATIVE_US|NATIVE_BRITISH|TURKISH|OTHER)$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeacherAdministration.Queries.GetDetailsQueryResult": {
        "required": [
          "accentType",
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "description",
          "email",
          "hourlyRate",
          "isAccountApproved",
          "isAvatarApproved",
          "isBankAccountSet",
          "isBanned",
          "isOnline",
          "metadataId",
          "name",
          "phoneNumber",
          "rate",
          "specalities",
          "teacherGuid",
          "teacherId",
          "youtubeVideoUrl"
        ],
        "type": "object",
        "properties": {
          "metadataId": {
            "type": "integer",
            "format": "int32"
          },
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "hourlyRate": {
            "type": "number",
            "format": "double"
          },
          "teacherGuid": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "youtubeVideoUrl": {
            "type": "string",
            "format": "uri"
          },
          "isBankAccountSet": {
            "type": "boolean"
          },
          "bankName": {
            "type": "string",
            "nullable": true
          },
          "bankAccountHolderName": {
            "type": "string",
            "nullable": true
          },
          "bankIban": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "accentType": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "isAvatarApproved": {
            "type": "boolean"
          },
          "isAccountApproved": {
            "type": "boolean"
          },
          "isBanned": {
            "type": "boolean"
          },
          "banReason": {
            "type": "string",
            "nullable": true
          },
          "bannedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "banHeldReason": {
            "type": "string",
            "nullable": true
          },
          "banHeldAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "specalities": {
            "$ref": "#/components/schemas/TeacherAdministration.Commands.Specalities"
          },
          "isZoomCreated": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeacherAdministration.Queries.ListQueryResult": {
        "required": [
          "pagination",
          "teachers"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/TeacherAdministration.Queries.TeachersPagination"
          },
          "teachers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeacherAdministration.Queries.TeacherListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "TeacherAdministration.Queries.ListSalariesQueryResult": {
        "required": [
          "pagination",
          "teachers"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/TeacherAdministration.Queries.TeachersSalariesPagination"
          },
          "teachers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TeacherAdministration.Queries.TeacherSalariesListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "TeacherAdministration.Queries.TeacherListItem": {
        "required": [
          "accentType",
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "description",
          "eMail",
          "id",
          "isAccountApproved",
          "isBanned",
          "isOnline",
          "isProfilePictureApproved",
          "name",
          "rate",
          "registeredAt"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "registeredAt": {
            "type": "string",
            "format": "date-time"
          },
          "avatar1X": {
            "type": "string",
            "format": "uri"
          },
          "avatar2X": {
            "type": "string",
            "format": "uri"
          },
          "avatar3X": {
            "type": "string",
            "format": "uri"
          },
          "avatar4X": {
            "type": "string",
            "format": "uri"
          },
          "accentType": {
            "pattern": "^(NATIVE_US|NATIVE_BRITISH|TURKISH|OTHER)$",
            "type": "string",
            "description": "Girilebilecek değerler:\r\nNATIVE_US,\r\nNATIVE_BRITISH,\r\nTURKISH,\r\nOTHER"
          },
          "name": {
            "type": "string"
          },
          "eMail": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "isAccountApproved": {
            "type": "boolean"
          },
          "isProfilePictureApproved": {
            "type": "boolean"
          },
          "isBanned": {
            "type": "boolean"
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "description": {
            "type": "string"
          },
          "isZoomCreated": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TeacherAdministration.Queries.TeacherSalariesListItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "minutes": {
            "type": "integer",
            "format": "int32"
          },
          "earnedAmount": {
            "type": "number",
            "format": "double"
          },
          "hourlyRate": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "hours": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "paymentStatus": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TeacherAdministration.Queries.TeachersPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TeacherAdministration.Queries.TeachersSalariesPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VideoRecord.Queries.ListQueryResult": {
        "required": [
          "pagination",
          "videoRecords"
        ],
        "type": "object",
        "properties": {
          "videoRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VideoRecord.Queries.VideoRecordListItem"
            },
            "description": "Canlı görüşmelerin kayıtları"
          },
          "pagination": {
            "$ref": "#/components/schemas/VideoRecord.Queries.ListVideoRecordsPagination"
          }
        },
        "additionalProperties": false
      },
      "VideoRecord.Queries.ListVideoRecordsPagination": {
        "required": [
          "isNextPageAvailable",
          "lastVideoRecordIdInList"
        ],
        "type": "object",
        "properties": {
          "isNextPageAvailable": {
            "type": "boolean"
          },
          "lastVideoRecordIdInList": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "VideoRecord.Queries.StudentInformationForVideoRecord": {
        "required": [
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "name",
          "studentId"
        ],
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "avatar1X": {
            "type": "string",
            "format": "uri"
          },
          "avatar2X": {
            "type": "string",
            "format": "uri"
          },
          "avatar3X": {
            "type": "string",
            "format": "uri"
          },
          "avatar4X": {
            "type": "string",
            "format": "uri"
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "VideoRecord.Queries.TeacherInformationForVideoRecord": {
        "required": [
          "accentType",
          "avatar1X",
          "avatar2X",
          "avatar3X",
          "avatar4X",
          "isOnline",
          "name",
          "rate",
          "teacherId"
        ],
        "type": "object",
        "properties": {
          "teacherId": {
            "type": "integer",
            "format": "int32"
          },
          "avatar1X": {
            "type": "string"
          },
          "avatar2X": {
            "type": "string"
          },
          "avatar3X": {
            "type": "string"
          },
          "avatar4X": {
            "type": "string"
          },
          "accentType": {
            "pattern": "^(NATIVE_US|NATIVE_BRITISH|TURKISH|OTHER)$",
            "type": "string",
            "description": "Girilebilecek değerler:\r\nNATIVE_US,\r\nNATIVE_BRITISH,\r\nTURKISH,\r\nOTHER"
          },
          "name": {
            "type": "string"
          },
          "isOnline": {
            "type": "boolean"
          },
          "rate": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "VideoRecord.Queries.VideoRecordListItem": {
        "required": [
          "id",
          "student",
          "teacher",
          "videoCreatedAt",
          "videoDuration",
          "videoEndedAt",
          "videoUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "videoCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoEndedAt": {
            "type": "string",
            "format": "date-time"
          },
          "videoDuration": {
            "type": "string"
          },
          "videoUrl": {
            "type": "string",
            "format": "uri"
          },
          "teacher": {
            "$ref": "#/components/schemas/VideoRecord.Queries.TeacherInformationForVideoRecord"
          },
          "student": {
            "$ref": "#/components/schemas/VideoRecord.Queries.StudentInformationForVideoRecord"
          }
        },
        "additionalProperties": false
      },
      "WordTutorial.Queries.FavoriteWordTutorial": {
        "required": [
          "coverImage1X",
          "coverImage2X",
          "coverImage3X",
          "coverImage4X",
          "id",
          "isFavorited",
          "slug",
          "subtitles",
          "translations",
          "wordTutorialCategoryId",
          "wordTutorialCategorySlug",
          "wordTutorialId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialId": {
            "type": "integer",
            "format": "int32"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "isFavorited": {
            "type": "boolean"
          },
          "wordTutorialCategoryId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorialCategorySlug": {
            "type": "string"
          },
          "coverImage1X": {
            "type": "string"
          },
          "coverImage2X": {
            "type": "string"
          },
          "coverImage3X": {
            "type": "string"
          },
          "coverImage4X": {
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorial.Queries.WordTutorialTranslation"
            }
          },
          "subtitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorial.Queries.WordTutorialSubtitle"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorial.Queries.ListMyFavoritesPagination": {
        "required": [
          "isNextPageAvailable"
        ],
        "type": "object",
        "properties": {
          "isNextPageAvailable": {
            "type": "boolean"
          },
          "lastId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WordTutorial.Queries.ListMyFavoritesQueryResult": {
        "required": [
          "favoritedWordTutorials",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/WordTutorial.Queries.ListMyFavoritesPagination"
          },
          "favoritedWordTutorials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorial.Queries.FavoriteWordTutorial"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorial.Queries.SubtitleContent": {
        "required": [
          "content",
          "contentId"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorial.Queries.WordTutorialSubtitle": {
        "required": [
          "languageCode",
          "lines",
          "subtitlePath"
        ],
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string"
          },
          "subtitlePath": {
            "type": "string"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorial.Queries.SubtitleContent"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorial.Queries.WordTutorialTranslation": {
        "required": [
          "content",
          "isRtlLanguage",
          "languageCode"
        ],
        "type": "object",
        "properties": {
          "languageCode": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "isRtlLanguage": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialAdministration.Commands.AddTranslationCommandResult": {
        "required": [
          "createdTranslationId"
        ],
        "type": "object",
        "properties": {
          "createdTranslationId": {
            "type": "integer",
            "description": "Oluşan çevirinin id'sidir.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialAdministration.Commands.ChangeYoutubeUrlCommandResult": {
        "type": "object",
        "properties": {
          "newYoutubeVideoUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WordTutorialAdministration.Commands.CreateCommandResult": {
        "required": [
          "createdWordTutorialId"
        ],
        "type": "object",
        "properties": {
          "createdWordTutorialId": {
            "type": "integer",
            "description": "Oluşan kelime eğitiminin id'sidir.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialAdministration.Commands.DeleteWordTutorialList": {
        "required": [
          "wordTutorialId"
        ],
        "type": "object",
        "properties": {
          "wordTutorialId": {
            "type": "integer",
            "description": "Silinecek kelime eğitiminin Id sini barındırır",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialAdministration.Commands.PostWordTutorialTranslation": {
        "required": [
          "content",
          "isRtlLanguage",
          "languageCode"
        ],
        "type": "object",
        "properties": {
          "languageCode": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "isRtlLanguage": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialAdministration.Queries.ListQueryResult": {
        "required": [
          "wordTutorials"
        ],
        "type": "object",
        "properties": {
          "wordTutorials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialAdministration.Queries.WordTutorialListItem"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorialAdministration.Queries.SubtitleLine": {
        "required": [
          "content",
          "contentId"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialAdministration.Queries.WordTutorialListItem": {
        "required": [
          "accentType",
          "id",
          "languageLevel",
          "slug",
          "subtitles",
          "translations",
          "youtubeVideoUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "youtubeVideoUrl": {
            "pattern": "^(?:https?:\\/\\/)?(?:www\\.)?youtu(?:\\.be\\/|be.com\\/\\S*(?:watch|embed)(?:(?:(?=\\/[^&\\s\\?]+(?!\\S))\\/)|(?:\\S*v=|v\\/)))([^&\\s\\?]+)$",
            "type": "string"
          },
          "subtitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialAdministration.Queries.WordTutorialSubtitleListItem"
            }
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialAdministration.Queries.WordTutorialTranslation"
            }
          },
          "accentType": {
            "type": "string"
          },
          "languageLevel": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialAdministration.Queries.WordTutorialSubtitleListItem": {
        "required": [
          "languageCode",
          "lines",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Kelime eğitimi, altyazı dosyasının linkini barındırır",
            "format": "uri"
          },
          "languageCode": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialAdministration.Queries.SubtitleLine"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorialAdministration.Queries.WordTutorialTranslation": {
        "required": [
          "content",
          "isRtlLanguage",
          "languageCode"
        ],
        "type": "object",
        "properties": {
          "languageCode": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "isRtlLanguage": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.GetDetailsQueryResult": {
        "required": [
          "completedWordTutorialsInCurrentCategory",
          "currentWordTutorial",
          "totalWordTutorialsInCategory"
        ],
        "type": "object",
        "properties": {
          "totalWordTutorialsInCategory": {
            "type": "integer",
            "format": "int32"
          },
          "completedWordTutorialsInCurrentCategory": {
            "type": "integer",
            "format": "int32"
          },
          "previousWordTutorial": {
            "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorialDetails"
          },
          "currentWordTutorial": {
            "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorialDetails"
          },
          "nextWordTutorial": {
            "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorialDetails"
          },
          "categories": {
            "$ref": "#/components/schemas/Advancer.Models.WordTutorialCategory.WordTutorialCategoryModel"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.ListQueryResult": {
        "required": [
          "categories",
          "pagination"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/WordTutorialCategory.Queries.ListWordTutorialCategoriesPagination"
          },
          "categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorialCategoryInList"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.ListWordTutorialCategoriesPagination": {
        "required": [
          "isNextPageAvailable",
          "lastId"
        ],
        "type": "object",
        "properties": {
          "isNextPageAvailable": {
            "type": "boolean"
          },
          "lastId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.RefreshWordTutorialsInCategoryQueryResult": {
        "required": [
          "categoryId",
          "wordTutorials"
        ],
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "wordTutorials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorial"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.SearchQueryResult": {
        "required": [
          "pagination",
          "wordTutorials"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/WordTutorialCategory.Queries.SearchWordTutorialsPagination"
          },
          "wordTutorials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorial"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.SearchWordTutorialsPagination": {
        "required": [
          "isNextPageAvailable"
        ],
        "type": "object",
        "properties": {
          "isNextPageAvailable": {
            "type": "boolean"
          },
          "lastId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.SubtitleContent": {
        "required": [
          "content",
          "contentId"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.WordTutorial": {
        "required": [
          "coverImage1X",
          "coverImage2X",
          "coverImage3X",
          "coverImage4X",
          "id",
          "isFavorited",
          "slug",
          "subtitles",
          "translations",
          "youtubeVideoUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorialTranslation"
            }
          },
          "subtitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorialSubtitle"
            }
          },
          "isFavorited": {
            "type": "boolean"
          },
          "youtubeVideoUrl": {
            "type": "string",
            "format": "uri"
          },
          "coverImage1X": {
            "type": "string"
          },
          "coverImage2X": {
            "type": "string"
          },
          "coverImage3X": {
            "type": "string"
          },
          "coverImage4X": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.WordTutorialCategoryInList": {
        "required": [
          "coverImage1X",
          "coverImage2X",
          "coverImage3X",
          "coverImage4X",
          "description",
          "id",
          "slug",
          "title",
          "wordTutorials"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "coverImage1X": {
            "type": "string",
            "format": "uri"
          },
          "coverImage2X": {
            "type": "string",
            "format": "uri"
          },
          "coverImage3X": {
            "type": "string",
            "format": "uri"
          },
          "coverImage4X": {
            "type": "string",
            "format": "uri"
          },
          "wordTutorials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorial"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.WordTutorialDetails": {
        "required": [
          "coverImage1X",
          "coverImage2X",
          "coverImage3X",
          "coverImage4X",
          "favoriteCount",
          "id",
          "isFavorited",
          "isLiked",
          "isShared",
          "isWatched",
          "likeCount",
          "shareCount",
          "slug",
          "subtitles",
          "translations",
          "watchCount",
          "youtubeVideoUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorialDetailsTranslation"
            }
          },
          "subtitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorialDetailsSubtitle"
            }
          },
          "isFavorited": {
            "type": "boolean"
          },
          "isLiked": {
            "type": "boolean"
          },
          "isShared": {
            "type": "boolean"
          },
          "isWatched": {
            "type": "boolean"
          },
          "youtubeVideoUrl": {
            "type": "string",
            "format": "uri"
          },
          "coverImage1X": {
            "type": "string"
          },
          "coverImage2X": {
            "type": "string"
          },
          "coverImage3X": {
            "type": "string"
          },
          "coverImage4X": {
            "type": "string"
          },
          "favoriteCount": {
            "type": "integer",
            "format": "int32"
          },
          "watchCount": {
            "type": "integer",
            "format": "int32"
          },
          "likeCount": {
            "type": "integer",
            "format": "int32"
          },
          "shareCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.WordTutorialDetailsSubtitle": {
        "required": [
          "languageCode",
          "lines",
          "subtitlePath"
        ],
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string"
          },
          "subtitlePath": {
            "type": "string"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategory.Queries.WordTutorialDetailsSubtitleContent"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.WordTutorialDetailsSubtitleContent": {
        "required": [
          "content",
          "contentId"
        ],
        "type": "object",
        "properties": {
          "contentId": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.WordTutorialDetailsTranslation": {
        "required": [
          "content",
          "isRtlLanguage",
          "languageCode"
        ],
        "type": "object",
        "properties": {
          "languageCode": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "isRtlLanguage": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.WordTutorialSubtitle": {
        "required": [
          "languageCode",
          "lines",
          "subtitlePath"
        ],
        "type": "object",
        "properties": {
          "languageCode": {
            "type": "string"
          },
          "subtitlePath": {
            "type": "string"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategory.Queries.SubtitleContent"
            }
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategory.Queries.WordTutorialTranslation": {
        "required": [
          "content",
          "isRtlLanguage",
          "languageCode"
        ],
        "type": "object",
        "properties": {
          "languageCode": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "isRtlLanguage": {
            "type": "boolean"
          },
          "content": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategoryAdministration.Commands.CreateCommandResult": {
        "required": [
          "createdWordTutorialCategoryId",
          "createdWordTutorialPhoto1X",
          "createdWordTutorialPhoto2X",
          "createdWordTutorialPhoto3X",
          "createdWordTutorialPhoto4X"
        ],
        "type": "object",
        "properties": {
          "createdWordTutorialCategoryId": {
            "type": "integer",
            "description": "Oluşan kelime eğitimi kategorisinin id'sidir.",
            "format": "int32"
          },
          "createdWordTutorialPhoto1X": {
            "type": "string",
            "format": "uri"
          },
          "createdWordTutorialPhoto2X": {
            "type": "string",
            "format": "uri"
          },
          "createdWordTutorialPhoto3X": {
            "type": "string",
            "format": "uri"
          },
          "createdWordTutorialPhoto4X": {
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategoryAdministration.Queries.ListQueryResult": {
        "required": [
          "pagination",
          "wordTutorialCategoryList"
        ],
        "type": "object",
        "properties": {
          "pagination": {
            "$ref": "#/components/schemas/WordTutorialCategoryAdministration.Queries.ListWordTutorialCategoriesPagination"
          },
          "wordTutorialCategoryList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WordTutorialCategoryAdministration.Queries.WordTutorialCategories"
            },
            "description": "Kelime eğitimlerinin listesini barındırır"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategoryAdministration.Queries.ListWordTutorialCategoriesPagination": {
        "required": [
          "currentPage",
          "recordsPerPage",
          "totalPages",
          "totalRecords"
        ],
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "recordsPerPage": {
            "type": "integer",
            "format": "int32"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialCategoryAdministration.Queries.WordTutorialCategories": {
        "required": [
          "description",
          "id",
          "slug",
          "title",
          "totalWordTutorialCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Kelime eğitiminin Id sini barındırır",
            "format": "int32"
          },
          "title": {
            "type": "string"
          },
          "slug": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "totalWordTutorialCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "WordTutorialSubtitleAdministration.Commands.AddSubtitleToWordTutorialCommandResult": {
        "type": "object",
        "properties": {
          "subtitleId": {
            "type": "integer",
            "format": "int32"
          },
          "subtitleFileId": {
            "type": "string",
            "nullable": true
          },
          "lineContents": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme.  \r\n                      Enter 'Bearer' [space] and then your token in the text input below.\r\n                      Example: 'Bearer 12345abcdef'",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}