/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AdvancerModelsAppointmentAppointmentModel } from './AdvancerModelsAppointmentAppointmentModel';
import {
    AdvancerModelsAppointmentAppointmentModelFromJSON,
    AdvancerModelsAppointmentAppointmentModelFromJSONTyped,
    AdvancerModelsAppointmentAppointmentModelToJSON,
} from './AdvancerModelsAppointmentAppointmentModel';
import type { AdvancerModelsAuthenticationAppUserModel } from './AdvancerModelsAuthenticationAppUserModel';
import {
    AdvancerModelsAuthenticationAppUserModelFromJSON,
    AdvancerModelsAuthenticationAppUserModelFromJSONTyped,
    AdvancerModelsAuthenticationAppUserModelToJSON,
} from './AdvancerModelsAuthenticationAppUserModel';
import type { AdvancerModelsRoleMetadataTeacherMetadataModel } from './AdvancerModelsRoleMetadataTeacherMetadataModel';
import {
    AdvancerModelsRoleMetadataTeacherMetadataModelFromJSON,
    AdvancerModelsRoleMetadataTeacherMetadataModelFromJSONTyped,
    AdvancerModelsRoleMetadataTeacherMetadataModelToJSON,
} from './AdvancerModelsRoleMetadataTeacherMetadataModel';

/**
 * 
 * @export
 * @interface AdvancerModelsSchedulerTeacherAvailabilityModel
 */
export interface AdvancerModelsSchedulerTeacherAvailabilityModel {
    /**
     * 
     * @type {Date}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    updatedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    teacherMetadataId?: number;
    /**
     * 
     * @type {AdvancerModelsRoleMetadataTeacherMetadataModel}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    teacherMetadata?: AdvancerModelsRoleMetadataTeacherMetadataModel;
    /**
     * Minimum şu anki zamandan 1 saat sonrası olmalıdır.
     * Maksimum şu andan itibaren 2 hafta - 15 dakika sonrası olabilir.
     * EndDateTime'dan daha sonra olmamalıdır.
     * EndDateTime ile 15 ve katları kadar farkı olmalıdır.
     * @type {Date}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    availabilityStartDateTime?: Date;
    /**
     * Minimum şu anki zamandan 1 saat 15 dakika sonrası olmalıdır.
     * Maksimum şu andan itibaren 2 hafta sonrası olabilir.
     * StartDateTime'dan daha sonra olmamalıdır.
     * StartDateTime ile 15 ve katları kadar farkı olmalıdır.
     * @type {Date}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    availabilityEndDateTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    reservedToAppointmentId?: number | null;
    /**
     * 
     * @type {AdvancerModelsAppointmentAppointmentModel}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    reservedToAppointment?: AdvancerModelsAppointmentAppointmentModel;
    /**
     * 
     * @type {number}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    reservedToStudentId?: number | null;
    /**
     * 
     * @type {AdvancerModelsAuthenticationAppUserModel}
     * @memberof AdvancerModelsSchedulerTeacherAvailabilityModel
     */
    reservedToStudent?: AdvancerModelsAuthenticationAppUserModel;
}

/**
 * Check if a given object implements the AdvancerModelsSchedulerTeacherAvailabilityModel interface.
 */
export function instanceOfAdvancerModelsSchedulerTeacherAvailabilityModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function AdvancerModelsSchedulerTeacherAvailabilityModelFromJSON(json: any): AdvancerModelsSchedulerTeacherAvailabilityModel {
    return AdvancerModelsSchedulerTeacherAvailabilityModelFromJSONTyped(json, false);
}

export function AdvancerModelsSchedulerTeacherAvailabilityModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancerModelsSchedulerTeacherAvailabilityModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'teacherMetadataId': !exists(json, 'teacherMetadataId') ? undefined : json['teacherMetadataId'],
        'teacherMetadata': !exists(json, 'teacherMetadata') ? undefined : AdvancerModelsRoleMetadataTeacherMetadataModelFromJSON(json['teacherMetadata']),
        'availabilityStartDateTime': !exists(json, 'availabilityStartDateTime') ? undefined : (new Date(json['availabilityStartDateTime'])),
        'availabilityEndDateTime': !exists(json, 'availabilityEndDateTime') ? undefined : (new Date(json['availabilityEndDateTime'])),
        'reservedToAppointmentId': !exists(json, 'reservedToAppointmentId') ? undefined : json['reservedToAppointmentId'],
        'reservedToAppointment': !exists(json, 'reservedToAppointment') ? undefined : AdvancerModelsAppointmentAppointmentModelFromJSON(json['reservedToAppointment']),
        'reservedToStudentId': !exists(json, 'reservedToStudentId') ? undefined : json['reservedToStudentId'],
        'reservedToStudent': !exists(json, 'reservedToStudent') ? undefined : AdvancerModelsAuthenticationAppUserModelFromJSON(json['reservedToStudent']),
    };
}

export function AdvancerModelsSchedulerTeacherAvailabilityModelToJSON(value?: AdvancerModelsSchedulerTeacherAvailabilityModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'id': value.id,
        'teacherMetadataId': value.teacherMetadataId,
        'teacherMetadata': AdvancerModelsRoleMetadataTeacherMetadataModelToJSON(value.teacherMetadata),
        'availabilityStartDateTime': value.availabilityStartDateTime === undefined ? undefined : (value.availabilityStartDateTime.toISOString()),
        'availabilityEndDateTime': value.availabilityEndDateTime === undefined ? undefined : (value.availabilityEndDateTime.toISOString()),
        'reservedToAppointmentId': value.reservedToAppointmentId,
        'reservedToAppointment': AdvancerModelsAppointmentAppointmentModelToJSON(value.reservedToAppointment),
        'reservedToStudentId': value.reservedToStudentId,
        'reservedToStudent': AdvancerModelsAuthenticationAppUserModelToJSON(value.reservedToStudent),
    };
}

