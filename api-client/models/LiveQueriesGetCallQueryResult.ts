/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LiveQueriesAppointment } from './LiveQueriesAppointment';
import {
    LiveQueriesAppointmentFromJSON,
    LiveQueriesAppointmentFromJSONTyped,
    LiveQueriesAppointmentToJSON,
} from './LiveQueriesAppointment';

/**
 * 
 * @export
 * @interface LiveQueriesGetCallQueryResult
 */
export interface LiveQueriesGetCallQueryResult {
    /**
     * 
     * @type {number}
     * @memberof LiveQueriesGetCallQueryResult
     */
    callId?: number;
    /**
     * 
     * @type {LiveQueriesAppointment}
     * @memberof LiveQueriesGetCallQueryResult
     */
    appointment?: LiveQueriesAppointment;
    /**
     * 
     * @type {Date}
     * @memberof LiveQueriesGetCallQueryResult
     */
    startedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof LiveQueriesGetCallQueryResult
     */
    endsAt?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof LiveQueriesGetCallQueryResult
     */
    isBothSidesAccepted?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LiveQueriesGetCallQueryResult
     */
    isStudentAccepted?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof LiveQueriesGetCallQueryResult
     */
    isTeacherAccepted?: boolean;
}

/**
 * Check if a given object implements the LiveQueriesGetCallQueryResult interface.
 */
export function instanceOfLiveQueriesGetCallQueryResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LiveQueriesGetCallQueryResultFromJSON(json: any): LiveQueriesGetCallQueryResult {
    return LiveQueriesGetCallQueryResultFromJSONTyped(json, false);
}

export function LiveQueriesGetCallQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveQueriesGetCallQueryResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'callId': !exists(json, 'callId') ? undefined : json['callId'],
        'appointment': !exists(json, 'appointment') ? undefined : LiveQueriesAppointmentFromJSON(json['appointment']),
        'startedAt': !exists(json, 'startedAt') ? undefined : (new Date(json['startedAt'])),
        'endsAt': !exists(json, 'endsAt') ? undefined : (new Date(json['endsAt'])),
        'isBothSidesAccepted': !exists(json, 'isBothSidesAccepted') ? undefined : json['isBothSidesAccepted'],
        'isStudentAccepted': !exists(json, 'isStudentAccepted') ? undefined : json['isStudentAccepted'],
        'isTeacherAccepted': !exists(json, 'isTeacherAccepted') ? undefined : json['isTeacherAccepted'],
    };
}

export function LiveQueriesGetCallQueryResultToJSON(value?: LiveQueriesGetCallQueryResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'callId': value.callId,
        'appointment': LiveQueriesAppointmentToJSON(value.appointment),
        'startedAt': value.startedAt === undefined ? undefined : (value.startedAt.toISOString()),
        'endsAt': value.endsAt === undefined ? undefined : (value.endsAt.toISOString()),
        'isBothSidesAccepted': value.isBothSidesAccepted,
        'isStudentAccepted': value.isStudentAccepted,
        'isTeacherAccepted': value.isTeacherAccepted,
    };
}

