/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VideoRecordQueriesListVideoRecordsPagination } from './VideoRecordQueriesListVideoRecordsPagination';
import {
    VideoRecordQueriesListVideoRecordsPaginationFromJSON,
    VideoRecordQueriesListVideoRecordsPaginationFromJSONTyped,
    VideoRecordQueriesListVideoRecordsPaginationToJSON,
} from './VideoRecordQueriesListVideoRecordsPagination';
import type { VideoRecordQueriesVideoRecordListItem } from './VideoRecordQueriesVideoRecordListItem';
import {
    VideoRecordQueriesVideoRecordListItemFromJSON,
    VideoRecordQueriesVideoRecordListItemFromJSONTyped,
    VideoRecordQueriesVideoRecordListItemToJSON,
} from './VideoRecordQueriesVideoRecordListItem';

/**
 * 
 * @export
 * @interface VideoRecordQueriesListQueryResult
 */
export interface VideoRecordQueriesListQueryResult {
    /**
     * Canlı görüşmelerin kayıtları
     * @type {Array<VideoRecordQueriesVideoRecordListItem>}
     * @memberof VideoRecordQueriesListQueryResult
     */
    videoRecords: Array<VideoRecordQueriesVideoRecordListItem>;
    /**
     * 
     * @type {VideoRecordQueriesListVideoRecordsPagination}
     * @memberof VideoRecordQueriesListQueryResult
     */
    pagination: VideoRecordQueriesListVideoRecordsPagination;
}

/**
 * Check if a given object implements the VideoRecordQueriesListQueryResult interface.
 */
export function instanceOfVideoRecordQueriesListQueryResult(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "videoRecords" in value;
    isInstance = isInstance && "pagination" in value;

    return isInstance;
}

export function VideoRecordQueriesListQueryResultFromJSON(json: any): VideoRecordQueriesListQueryResult {
    return VideoRecordQueriesListQueryResultFromJSONTyped(json, false);
}

export function VideoRecordQueriesListQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoRecordQueriesListQueryResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'videoRecords': ((json['videoRecords'] as Array<any>).map(VideoRecordQueriesVideoRecordListItemFromJSON)),
        'pagination': VideoRecordQueriesListVideoRecordsPaginationFromJSON(json['pagination']),
    };
}

export function VideoRecordQueriesListQueryResultToJSON(value?: VideoRecordQueriesListQueryResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'videoRecords': ((value.videoRecords as Array<any>).map(VideoRecordQueriesVideoRecordListItemToJSON)),
        'pagination': VideoRecordQueriesListVideoRecordsPaginationToJSON(value.pagination),
    };
}

