/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AdvancerModelsJoinTableTeacherMetadataLessonTypeModel } from './AdvancerModelsJoinTableTeacherMetadataLessonTypeModel';
import {
    AdvancerModelsJoinTableTeacherMetadataLessonTypeModelFromJSON,
    AdvancerModelsJoinTableTeacherMetadataLessonTypeModelFromJSONTyped,
    AdvancerModelsJoinTableTeacherMetadataLessonTypeModelToJSON,
} from './AdvancerModelsJoinTableTeacherMetadataLessonTypeModel';

/**
 * 
 * @export
 * @interface AdvancerModelsSpecialityLessonTypeModel
 */
export interface AdvancerModelsSpecialityLessonTypeModel {
    /**
     * 
     * @type {Date}
     * @memberof AdvancerModelsSpecialityLessonTypeModel
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof AdvancerModelsSpecialityLessonTypeModel
     */
    updatedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof AdvancerModelsSpecialityLessonTypeModel
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof AdvancerModelsSpecialityLessonTypeModel
     */
    enumName?: string | null;
    /**
     * 
     * @type {Array<AdvancerModelsJoinTableTeacherMetadataLessonTypeModel>}
     * @memberof AdvancerModelsSpecialityLessonTypeModel
     */
    teachers?: Array<AdvancerModelsJoinTableTeacherMetadataLessonTypeModel> | null;
}

/**
 * Check if a given object implements the AdvancerModelsSpecialityLessonTypeModel interface.
 */
export function instanceOfAdvancerModelsSpecialityLessonTypeModel(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;

    return isInstance;
}

export function AdvancerModelsSpecialityLessonTypeModelFromJSON(json: any): AdvancerModelsSpecialityLessonTypeModel {
    return AdvancerModelsSpecialityLessonTypeModelFromJSONTyped(json, false);
}

export function AdvancerModelsSpecialityLessonTypeModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdvancerModelsSpecialityLessonTypeModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'enumName': !exists(json, 'enumName') ? undefined : json['enumName'],
        'teachers': !exists(json, 'teachers') ? undefined : (json['teachers'] === null ? null : (json['teachers'] as Array<any>).map(AdvancerModelsJoinTableTeacherMetadataLessonTypeModelFromJSON)),
    };
}

export function AdvancerModelsSpecialityLessonTypeModelToJSON(value?: AdvancerModelsSpecialityLessonTypeModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'id': value.id,
        'enumName': value.enumName,
        'teachers': value.teachers === undefined ? undefined : (value.teachers === null ? null : (value.teachers as Array<any>).map(AdvancerModelsJoinTableTeacherMetadataLessonTypeModelToJSON)),
    };
}

