/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StudentAdministrationQueriesGetStudentDetailsQueryResult
 */
export interface StudentAdministrationQueriesGetStudentDetailsQueryResult {
    /**
     * 
     * @type {number}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    metadataId: number;
    /**
     * 
     * @type {number}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    studentId: number;
    /**
     * 
     * @type {string}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    studentGuid: string;
    /**
     * 
     * @type {string}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    phoneNumber: string;
    /**
     * 
     * @type {string}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    email: string;
    /**
     * 
     * @type {boolean}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    isAvatarApproved: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    isBanned: boolean;
    /**
     * 
     * @type {string}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    banReason?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    bannedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    banHeldReason?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    banHeldAt?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    isPremium: boolean;
    /**
     * 
     * @type {string}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    avatar1X: string;
    /**
     * 
     * @type {string}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    avatar2X: string;
    /**
     * 
     * @type {string}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    avatar3X: string;
    /**
     * 
     * @type {string}
     * @memberof StudentAdministrationQueriesGetStudentDetailsQueryResult
     */
    avatar4X: string;
}

/**
 * Check if a given object implements the StudentAdministrationQueriesGetStudentDetailsQueryResult interface.
 */
export function instanceOfStudentAdministrationQueriesGetStudentDetailsQueryResult(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "metadataId" in value;
    isInstance = isInstance && "studentId" in value;
    isInstance = isInstance && "studentGuid" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "phoneNumber" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "isAvatarApproved" in value;
    isInstance = isInstance && "isBanned" in value;
    isInstance = isInstance && "isPremium" in value;
    isInstance = isInstance && "avatar1X" in value;
    isInstance = isInstance && "avatar2X" in value;
    isInstance = isInstance && "avatar3X" in value;
    isInstance = isInstance && "avatar4X" in value;

    return isInstance;
}

export function StudentAdministrationQueriesGetStudentDetailsQueryResultFromJSON(json: any): StudentAdministrationQueriesGetStudentDetailsQueryResult {
    return StudentAdministrationQueriesGetStudentDetailsQueryResultFromJSONTyped(json, false);
}

export function StudentAdministrationQueriesGetStudentDetailsQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudentAdministrationQueriesGetStudentDetailsQueryResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'metadataId': json['metadataId'],
        'studentId': json['studentId'],
        'studentGuid': json['studentGuid'],
        'name': json['name'],
        'phoneNumber': json['phoneNumber'],
        'email': json['email'],
        'isAvatarApproved': json['isAvatarApproved'],
        'isBanned': json['isBanned'],
        'banReason': !exists(json, 'banReason') ? undefined : json['banReason'],
        'bannedAt': !exists(json, 'bannedAt') ? undefined : (json['bannedAt'] === null ? null : new Date(json['bannedAt'])),
        'banHeldReason': !exists(json, 'banHeldReason') ? undefined : json['banHeldReason'],
        'banHeldAt': !exists(json, 'banHeldAt') ? undefined : (json['banHeldAt'] === null ? null : new Date(json['banHeldAt'])),
        'isPremium': json['isPremium'],
        'avatar1X': json['avatar1X'],
        'avatar2X': json['avatar2X'],
        'avatar3X': json['avatar3X'],
        'avatar4X': json['avatar4X'],
    };
}

export function StudentAdministrationQueriesGetStudentDetailsQueryResultToJSON(value?: StudentAdministrationQueriesGetStudentDetailsQueryResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'metadataId': value.metadataId,
        'studentId': value.studentId,
        'studentGuid': value.studentGuid,
        'name': value.name,
        'phoneNumber': value.phoneNumber,
        'email': value.email,
        'isAvatarApproved': value.isAvatarApproved,
        'isBanned': value.isBanned,
        'banReason': value.banReason,
        'bannedAt': value.bannedAt === undefined ? undefined : (value.bannedAt === null ? null : value.bannedAt.toISOString()),
        'banHeldReason': value.banHeldReason,
        'banHeldAt': value.banHeldAt === undefined ? undefined : (value.banHeldAt === null ? null : value.banHeldAt.toISOString()),
        'isPremium': value.isPremium,
        'avatar1X': value.avatar1X,
        'avatar2X': value.avatar2X,
        'avatar3X': value.avatar3X,
        'avatar4X': value.avatar4X,
    };
}

