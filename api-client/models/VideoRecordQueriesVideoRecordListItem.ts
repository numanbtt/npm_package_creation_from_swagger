/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VideoRecordQueriesStudentInformationForVideoRecord } from './VideoRecordQueriesStudentInformationForVideoRecord';
import {
    VideoRecordQueriesStudentInformationForVideoRecordFromJSON,
    VideoRecordQueriesStudentInformationForVideoRecordFromJSONTyped,
    VideoRecordQueriesStudentInformationForVideoRecordToJSON,
} from './VideoRecordQueriesStudentInformationForVideoRecord';
import type { VideoRecordQueriesTeacherInformationForVideoRecord } from './VideoRecordQueriesTeacherInformationForVideoRecord';
import {
    VideoRecordQueriesTeacherInformationForVideoRecordFromJSON,
    VideoRecordQueriesTeacherInformationForVideoRecordFromJSONTyped,
    VideoRecordQueriesTeacherInformationForVideoRecordToJSON,
} from './VideoRecordQueriesTeacherInformationForVideoRecord';

/**
 * 
 * @export
 * @interface VideoRecordQueriesVideoRecordListItem
 */
export interface VideoRecordQueriesVideoRecordListItem {
    /**
     * 
     * @type {number}
     * @memberof VideoRecordQueriesVideoRecordListItem
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof VideoRecordQueriesVideoRecordListItem
     */
    videoCreatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof VideoRecordQueriesVideoRecordListItem
     */
    videoEndedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof VideoRecordQueriesVideoRecordListItem
     */
    videoDuration: string;
    /**
     * 
     * @type {string}
     * @memberof VideoRecordQueriesVideoRecordListItem
     */
    videoUrl: string;
    /**
     * 
     * @type {VideoRecordQueriesTeacherInformationForVideoRecord}
     * @memberof VideoRecordQueriesVideoRecordListItem
     */
    teacher: VideoRecordQueriesTeacherInformationForVideoRecord;
    /**
     * 
     * @type {VideoRecordQueriesStudentInformationForVideoRecord}
     * @memberof VideoRecordQueriesVideoRecordListItem
     */
    student: VideoRecordQueriesStudentInformationForVideoRecord;
}

/**
 * Check if a given object implements the VideoRecordQueriesVideoRecordListItem interface.
 */
export function instanceOfVideoRecordQueriesVideoRecordListItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "videoCreatedAt" in value;
    isInstance = isInstance && "videoEndedAt" in value;
    isInstance = isInstance && "videoDuration" in value;
    isInstance = isInstance && "videoUrl" in value;
    isInstance = isInstance && "teacher" in value;
    isInstance = isInstance && "student" in value;

    return isInstance;
}

export function VideoRecordQueriesVideoRecordListItemFromJSON(json: any): VideoRecordQueriesVideoRecordListItem {
    return VideoRecordQueriesVideoRecordListItemFromJSONTyped(json, false);
}

export function VideoRecordQueriesVideoRecordListItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoRecordQueriesVideoRecordListItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'videoCreatedAt': (new Date(json['videoCreatedAt'])),
        'videoEndedAt': (new Date(json['videoEndedAt'])),
        'videoDuration': json['videoDuration'],
        'videoUrl': json['videoUrl'],
        'teacher': VideoRecordQueriesTeacherInformationForVideoRecordFromJSON(json['teacher']),
        'student': VideoRecordQueriesStudentInformationForVideoRecordFromJSON(json['student']),
    };
}

export function VideoRecordQueriesVideoRecordListItemToJSON(value?: VideoRecordQueriesVideoRecordListItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'videoCreatedAt': (value.videoCreatedAt.toISOString()),
        'videoEndedAt': (value.videoEndedAt.toISOString()),
        'videoDuration': value.videoDuration,
        'videoUrl': value.videoUrl,
        'teacher': VideoRecordQueriesTeacherInformationForVideoRecordToJSON(value.teacher),
        'student': VideoRecordQueriesStudentInformationForVideoRecordToJSON(value.student),
    };
}

