/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AppointmentAdministrationQueriesAppointmentsForPayResult
 */
export interface AppointmentAdministrationQueriesAppointmentsForPayResult {
    /**
     * 
     * @type {number}
     * @memberof AppointmentAdministrationQueriesAppointmentsForPayResult
     */
    appointmentId?: number;
    /**
     * 
     * @type {number}
     * @memberof AppointmentAdministrationQueriesAppointmentsForPayResult
     */
    studentId?: number;
    /**
     * 
     * @type {string}
     * @memberof AppointmentAdministrationQueriesAppointmentsForPayResult
     */
    studentName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AppointmentAdministrationQueriesAppointmentsForPayResult
     */
    startDateTime?: string | null;
    /**
     * 
     * @type {string}
     * @memberof AppointmentAdministrationQueriesAppointmentsForPayResult
     */
    endDateTime?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AppointmentAdministrationQueriesAppointmentsForPayResult
     */
    mints?: number;
    /**
     * 
     * @type {string}
     * @memberof AppointmentAdministrationQueriesAppointmentsForPayResult
     */
    appointmentType?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof AppointmentAdministrationQueriesAppointmentsForPayResult
     */
    paid?: boolean;
}

/**
 * Check if a given object implements the AppointmentAdministrationQueriesAppointmentsForPayResult interface.
 */
export function instanceOfAppointmentAdministrationQueriesAppointmentsForPayResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AppointmentAdministrationQueriesAppointmentsForPayResultFromJSON(json: any): AppointmentAdministrationQueriesAppointmentsForPayResult {
    return AppointmentAdministrationQueriesAppointmentsForPayResultFromJSONTyped(json, false);
}

export function AppointmentAdministrationQueriesAppointmentsForPayResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppointmentAdministrationQueriesAppointmentsForPayResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'appointmentId': !exists(json, 'appointmentId') ? undefined : json['appointmentId'],
        'studentId': !exists(json, 'studentId') ? undefined : json['studentId'],
        'studentName': !exists(json, 'studentName') ? undefined : json['studentName'],
        'startDateTime': !exists(json, 'startDateTime') ? undefined : json['startDateTime'],
        'endDateTime': !exists(json, 'endDateTime') ? undefined : json['endDateTime'],
        'mints': !exists(json, 'mints') ? undefined : json['mints'],
        'appointmentType': !exists(json, 'appointmentType') ? undefined : json['appointmentType'],
        'paid': !exists(json, 'paid') ? undefined : json['paid'],
    };
}

export function AppointmentAdministrationQueriesAppointmentsForPayResultToJSON(value?: AppointmentAdministrationQueriesAppointmentsForPayResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'appointmentId': value.appointmentId,
        'studentId': value.studentId,
        'studentName': value.studentName,
        'startDateTime': value.startDateTime,
        'endDateTime': value.endDateTime,
        'mints': value.mints,
        'appointmentType': value.appointmentType,
        'paid': value.paid,
    };
}

