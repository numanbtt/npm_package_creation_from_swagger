/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SchedulerCommandsSchedulerTimeRange
 */
export interface SchedulerCommandsSchedulerTimeRange {
    /**
     * 
     * @type {Date}
     * @memberof SchedulerCommandsSchedulerTimeRange
     */
    startTime: Date;
    /**
     * 
     * @type {Date}
     * @memberof SchedulerCommandsSchedulerTimeRange
     */
    endTime: Date;
    /**
     * 
     * @type {boolean}
     * @memberof SchedulerCommandsSchedulerTimeRange
     */
    isAdded: boolean;
}

/**
 * Check if a given object implements the SchedulerCommandsSchedulerTimeRange interface.
 */
export function instanceOfSchedulerCommandsSchedulerTimeRange(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "startTime" in value;
    isInstance = isInstance && "endTime" in value;
    isInstance = isInstance && "isAdded" in value;

    return isInstance;
}

export function SchedulerCommandsSchedulerTimeRangeFromJSON(json: any): SchedulerCommandsSchedulerTimeRange {
    return SchedulerCommandsSchedulerTimeRangeFromJSONTyped(json, false);
}

export function SchedulerCommandsSchedulerTimeRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchedulerCommandsSchedulerTimeRange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startTime': (new Date(json['startTime'])),
        'endTime': (new Date(json['endTime'])),
        'isAdded': json['isAdded'],
    };
}

export function SchedulerCommandsSchedulerTimeRangeToJSON(value?: SchedulerCommandsSchedulerTimeRange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startTime': (value.startTime.toISOString()),
        'endTime': (value.endTime.toISOString()),
        'isAdded': value.isAdded,
    };
}

