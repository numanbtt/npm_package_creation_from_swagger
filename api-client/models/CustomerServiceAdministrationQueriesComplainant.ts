/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CustomerServiceAdministrationQueriesComplainant
 */
export interface CustomerServiceAdministrationQueriesComplainant {
    /**
     * Şikayet eden kişinin Id sini belirtir
     * @type {number}
     * @memberof CustomerServiceAdministrationQueriesComplainant
     */
    complainantId: number;
    /**
     * Şikayet eden kullanıcının profil resminin 1x boyutunda urlsini barındırır
     * @type {string}
     * @memberof CustomerServiceAdministrationQueriesComplainant
     */
    complainantAvatar1X?: string | null;
    /**
     * Şikayet eden kullanıcının profil resminin 2x boyutunda urlsini barındırır
     * @type {string}
     * @memberof CustomerServiceAdministrationQueriesComplainant
     */
    complainantAvatar2X?: string | null;
    /**
     * Şikayet eden kullanıcının profil resminin 3x boyutunda urlsini barındırır
     * @type {string}
     * @memberof CustomerServiceAdministrationQueriesComplainant
     */
    complainantAvatar3X?: string | null;
    /**
     * Şikayet eden kullanıcının profil resminin 3x boyutunda urlsini barındırır
     * @type {string}
     * @memberof CustomerServiceAdministrationQueriesComplainant
     */
    complainantAvatar4X?: string | null;
    /**
     * Şikayet eden kullanıcının ismini barındırır
     * @type {string}
     * @memberof CustomerServiceAdministrationQueriesComplainant
     */
    complaininatName: string;
    /**
     * Şikayet eden kullanıcının rolünü barındırır
     * @type {string}
     * @memberof CustomerServiceAdministrationQueriesComplainant
     */
    complainantRole: string;
}

/**
 * Check if a given object implements the CustomerServiceAdministrationQueriesComplainant interface.
 */
export function instanceOfCustomerServiceAdministrationQueriesComplainant(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "complainantId" in value;
    isInstance = isInstance && "complaininatName" in value;
    isInstance = isInstance && "complainantRole" in value;

    return isInstance;
}

export function CustomerServiceAdministrationQueriesComplainantFromJSON(json: any): CustomerServiceAdministrationQueriesComplainant {
    return CustomerServiceAdministrationQueriesComplainantFromJSONTyped(json, false);
}

export function CustomerServiceAdministrationQueriesComplainantFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerServiceAdministrationQueriesComplainant {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'complainantId': json['complainantId'],
        'complainantAvatar1X': !exists(json, 'complainantAvatar1X') ? undefined : json['complainantAvatar1X'],
        'complainantAvatar2X': !exists(json, 'complainantAvatar2X') ? undefined : json['complainantAvatar2X'],
        'complainantAvatar3X': !exists(json, 'complainantAvatar3X') ? undefined : json['complainantAvatar3X'],
        'complainantAvatar4X': !exists(json, 'complainantAvatar4X') ? undefined : json['complainantAvatar4X'],
        'complaininatName': json['complaininatName'],
        'complainantRole': json['complainantRole'],
    };
}

export function CustomerServiceAdministrationQueriesComplainantToJSON(value?: CustomerServiceAdministrationQueriesComplainant | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'complainantId': value.complainantId,
        'complainantAvatar1X': value.complainantAvatar1X,
        'complainantAvatar2X': value.complainantAvatar2X,
        'complainantAvatar3X': value.complainantAvatar3X,
        'complainantAvatar4X': value.complainantAvatar4X,
        'complaininatName': value.complaininatName,
        'complainantRole': value.complainantRole,
    };
}

