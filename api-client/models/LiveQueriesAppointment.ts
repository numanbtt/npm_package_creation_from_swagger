/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AdvancerModelsAppointmentAppointmentType } from './AdvancerModelsAppointmentAppointmentType';
import {
    AdvancerModelsAppointmentAppointmentTypeFromJSON,
    AdvancerModelsAppointmentAppointmentTypeFromJSONTyped,
    AdvancerModelsAppointmentAppointmentTypeToJSON,
} from './AdvancerModelsAppointmentAppointmentType';
import type { LiveQueriesStudentDetailsForCall } from './LiveQueriesStudentDetailsForCall';
import {
    LiveQueriesStudentDetailsForCallFromJSON,
    LiveQueriesStudentDetailsForCallFromJSONTyped,
    LiveQueriesStudentDetailsForCallToJSON,
} from './LiveQueriesStudentDetailsForCall';
import type { LiveQueriesTeacherDetailsForCall } from './LiveQueriesTeacherDetailsForCall';
import {
    LiveQueriesTeacherDetailsForCallFromJSON,
    LiveQueriesTeacherDetailsForCallFromJSONTyped,
    LiveQueriesTeacherDetailsForCallToJSON,
} from './LiveQueriesTeacherDetailsForCall';

/**
 * 
 * @export
 * @interface LiveQueriesAppointment
 */
export interface LiveQueriesAppointment {
    /**
     * 
     * @type {number}
     * @memberof LiveQueriesAppointment
     */
    id?: number;
    /**
     * 
     * @type {AdvancerModelsAppointmentAppointmentType}
     * @memberof LiveQueriesAppointment
     */
    appointmentType?: AdvancerModelsAppointmentAppointmentType;
    /**
     * 
     * @type {number}
     * @memberof LiveQueriesAppointment
     */
    studentId?: number;
    /**
     * 
     * @type {number}
     * @memberof LiveQueriesAppointment
     */
    teacherId?: number;
    /**
     * 
     * @type {LiveQueriesTeacherDetailsForCall}
     * @memberof LiveQueriesAppointment
     */
    teacher?: LiveQueriesTeacherDetailsForCall;
    /**
     * 
     * @type {LiveQueriesStudentDetailsForCall}
     * @memberof LiveQueriesAppointment
     */
    student?: LiveQueriesStudentDetailsForCall;
    /**
     * 
     * @type {Date}
     * @memberof LiveQueriesAppointment
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof LiveQueriesAppointment
     */
    endDate?: Date;
}

/**
 * Check if a given object implements the LiveQueriesAppointment interface.
 */
export function instanceOfLiveQueriesAppointment(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LiveQueriesAppointmentFromJSON(json: any): LiveQueriesAppointment {
    return LiveQueriesAppointmentFromJSONTyped(json, false);
}

export function LiveQueriesAppointmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveQueriesAppointment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'appointmentType': !exists(json, 'appointmentType') ? undefined : AdvancerModelsAppointmentAppointmentTypeFromJSON(json['appointmentType']),
        'studentId': !exists(json, 'studentId') ? undefined : json['studentId'],
        'teacherId': !exists(json, 'teacherId') ? undefined : json['teacherId'],
        'teacher': !exists(json, 'teacher') ? undefined : LiveQueriesTeacherDetailsForCallFromJSON(json['teacher']),
        'student': !exists(json, 'student') ? undefined : LiveQueriesStudentDetailsForCallFromJSON(json['student']),
        'startDate': !exists(json, 'startDate') ? undefined : (new Date(json['startDate'])),
        'endDate': !exists(json, 'endDate') ? undefined : (new Date(json['endDate'])),
    };
}

export function LiveQueriesAppointmentToJSON(value?: LiveQueriesAppointment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'appointmentType': AdvancerModelsAppointmentAppointmentTypeToJSON(value.appointmentType),
        'studentId': value.studentId,
        'teacherId': value.teacherId,
        'teacher': LiveQueriesTeacherDetailsForCallToJSON(value.teacher),
        'student': LiveQueriesStudentDetailsForCallToJSON(value.student),
        'startDate': value.startDate === undefined ? undefined : (value.startDate.toISOString()),
        'endDate': value.endDate === undefined ? undefined : (value.endDate.toISOString()),
    };
}

