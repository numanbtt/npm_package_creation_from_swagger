/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AdvancerModelsAppointmentAppointmentType } from './AdvancerModelsAppointmentAppointmentType';
import {
    AdvancerModelsAppointmentAppointmentTypeFromJSON,
    AdvancerModelsAppointmentAppointmentTypeFromJSONTyped,
    AdvancerModelsAppointmentAppointmentTypeToJSON,
} from './AdvancerModelsAppointmentAppointmentType';
import type { LiveQueriesRoomInfoStudent } from './LiveQueriesRoomInfoStudent';
import {
    LiveQueriesRoomInfoStudentFromJSON,
    LiveQueriesRoomInfoStudentFromJSONTyped,
    LiveQueriesRoomInfoStudentToJSON,
} from './LiveQueriesRoomInfoStudent';
import type { LiveQueriesRoomInfoTeacher } from './LiveQueriesRoomInfoTeacher';
import {
    LiveQueriesRoomInfoTeacherFromJSON,
    LiveQueriesRoomInfoTeacherFromJSONTyped,
    LiveQueriesRoomInfoTeacherToJSON,
} from './LiveQueriesRoomInfoTeacher';

/**
 * 
 * @export
 * @interface LiveQueriesGetRoomInfoQueryResult
 */
export interface LiveQueriesGetRoomInfoQueryResult {
    /**
     * 
     * @type {Date}
     * @memberof LiveQueriesGetRoomInfoQueryResult
     */
    startDateTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof LiveQueriesGetRoomInfoQueryResult
     */
    endDateTime?: Date;
    /**
     * 
     * @type {AdvancerModelsAppointmentAppointmentType}
     * @memberof LiveQueriesGetRoomInfoQueryResult
     */
    appointmentType?: AdvancerModelsAppointmentAppointmentType;
    /**
     * 
     * @type {LiveQueriesRoomInfoTeacher}
     * @memberof LiveQueriesGetRoomInfoQueryResult
     */
    teacher?: LiveQueriesRoomInfoTeacher;
    /**
     * 
     * @type {LiveQueriesRoomInfoStudent}
     * @memberof LiveQueriesGetRoomInfoQueryResult
     */
    student?: LiveQueriesRoomInfoStudent;
}

/**
 * Check if a given object implements the LiveQueriesGetRoomInfoQueryResult interface.
 */
export function instanceOfLiveQueriesGetRoomInfoQueryResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LiveQueriesGetRoomInfoQueryResultFromJSON(json: any): LiveQueriesGetRoomInfoQueryResult {
    return LiveQueriesGetRoomInfoQueryResultFromJSONTyped(json, false);
}

export function LiveQueriesGetRoomInfoQueryResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveQueriesGetRoomInfoQueryResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startDateTime': !exists(json, 'startDateTime') ? undefined : (new Date(json['startDateTime'])),
        'endDateTime': !exists(json, 'endDateTime') ? undefined : (new Date(json['endDateTime'])),
        'appointmentType': !exists(json, 'appointmentType') ? undefined : AdvancerModelsAppointmentAppointmentTypeFromJSON(json['appointmentType']),
        'teacher': !exists(json, 'teacher') ? undefined : LiveQueriesRoomInfoTeacherFromJSON(json['teacher']),
        'student': !exists(json, 'student') ? undefined : LiveQueriesRoomInfoStudentFromJSON(json['student']),
    };
}

export function LiveQueriesGetRoomInfoQueryResultToJSON(value?: LiveQueriesGetRoomInfoQueryResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startDateTime': value.startDateTime === undefined ? undefined : (value.startDateTime.toISOString()),
        'endDateTime': value.endDateTime === undefined ? undefined : (value.endDateTime.toISOString()),
        'appointmentType': AdvancerModelsAppointmentAppointmentTypeToJSON(value.appointmentType),
        'teacher': LiveQueriesRoomInfoTeacherToJSON(value.teacher),
        'student': LiveQueriesRoomInfoStudentToJSON(value.student),
    };
}

