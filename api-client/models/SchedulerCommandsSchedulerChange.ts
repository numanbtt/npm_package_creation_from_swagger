/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SchedulerCommandsSchedulerTimeRange } from './SchedulerCommandsSchedulerTimeRange';
import {
    SchedulerCommandsSchedulerTimeRangeFromJSON,
    SchedulerCommandsSchedulerTimeRangeFromJSONTyped,
    SchedulerCommandsSchedulerTimeRangeToJSON,
} from './SchedulerCommandsSchedulerTimeRange';

/**
 * 
 * @export
 * @interface SchedulerCommandsSchedulerChange
 */
export interface SchedulerCommandsSchedulerChange {
    /**
     * Hangi tarihin güncelleneceği
     * @type {Date}
     * @memberof SchedulerCommandsSchedulerChange
     */
    date: Date;
    /**
     * Hangi zaman aralıklarının eklendiği ve çıkarıldığını tutar
     * @type {Array<SchedulerCommandsSchedulerTimeRange>}
     * @memberof SchedulerCommandsSchedulerChange
     */
    timeRanges: Array<SchedulerCommandsSchedulerTimeRange>;
}

/**
 * Check if a given object implements the SchedulerCommandsSchedulerChange interface.
 */
export function instanceOfSchedulerCommandsSchedulerChange(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "date" in value;
    isInstance = isInstance && "timeRanges" in value;

    return isInstance;
}

export function SchedulerCommandsSchedulerChangeFromJSON(json: any): SchedulerCommandsSchedulerChange {
    return SchedulerCommandsSchedulerChangeFromJSONTyped(json, false);
}

export function SchedulerCommandsSchedulerChangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SchedulerCommandsSchedulerChange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'date': (new Date(json['date'])),
        'timeRanges': ((json['timeRanges'] as Array<any>).map(SchedulerCommandsSchedulerTimeRangeFromJSON)),
    };
}

export function SchedulerCommandsSchedulerChangeToJSON(value?: SchedulerCommandsSchedulerChange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'date': (value.date.toISOString()),
        'timeRanges': ((value.timeRanges as Array<any>).map(SchedulerCommandsSchedulerTimeRangeToJSON)),
    };
}

