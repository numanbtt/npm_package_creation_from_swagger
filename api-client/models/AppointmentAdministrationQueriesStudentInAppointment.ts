/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AppointmentAdministrationQueriesStudentInAppointment
 */
export interface AppointmentAdministrationQueriesStudentInAppointment {
    /**
     * 
     * @type {number}
     * @memberof AppointmentAdministrationQueriesStudentInAppointment
     */
    studentId: number;
    /**
     * 
     * @type {string}
     * @memberof AppointmentAdministrationQueriesStudentInAppointment
     */
    studentGuid: string;
    /**
     * 
     * @type {string}
     * @memberof AppointmentAdministrationQueriesStudentInAppointment
     */
    avatar1X: string;
    /**
     * 
     * @type {string}
     * @memberof AppointmentAdministrationQueriesStudentInAppointment
     */
    avatar2X: string;
    /**
     * 
     * @type {string}
     * @memberof AppointmentAdministrationQueriesStudentInAppointment
     */
    avatar3X: string;
    /**
     * 
     * @type {string}
     * @memberof AppointmentAdministrationQueriesStudentInAppointment
     */
    avatar4X: string;
    /**
     * 
     * @type {string}
     * @memberof AppointmentAdministrationQueriesStudentInAppointment
     */
    name: string;
}

/**
 * Check if a given object implements the AppointmentAdministrationQueriesStudentInAppointment interface.
 */
export function instanceOfAppointmentAdministrationQueriesStudentInAppointment(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "studentId" in value;
    isInstance = isInstance && "studentGuid" in value;
    isInstance = isInstance && "avatar1X" in value;
    isInstance = isInstance && "avatar2X" in value;
    isInstance = isInstance && "avatar3X" in value;
    isInstance = isInstance && "avatar4X" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function AppointmentAdministrationQueriesStudentInAppointmentFromJSON(json: any): AppointmentAdministrationQueriesStudentInAppointment {
    return AppointmentAdministrationQueriesStudentInAppointmentFromJSONTyped(json, false);
}

export function AppointmentAdministrationQueriesStudentInAppointmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppointmentAdministrationQueriesStudentInAppointment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'studentId': json['studentId'],
        'studentGuid': json['studentGuid'],
        'avatar1X': json['avatar1X'],
        'avatar2X': json['avatar2X'],
        'avatar3X': json['avatar3X'],
        'avatar4X': json['avatar4X'],
        'name': json['name'],
    };
}

export function AppointmentAdministrationQueriesStudentInAppointmentToJSON(value?: AppointmentAdministrationQueriesStudentInAppointment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'studentId': value.studentId,
        'studentGuid': value.studentGuid,
        'avatar1X': value.avatar1X,
        'avatar2X': value.avatar2X,
        'avatar3X': value.avatar3X,
        'avatar4X': value.avatar4X,
        'name': value.name,
    };
}

