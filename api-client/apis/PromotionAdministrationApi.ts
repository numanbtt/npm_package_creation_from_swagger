/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  FluentValidationResultsValidationFailure,
  PromotionAdministrationCommandsCreateDiscountCommandResult,
  PromotionAdministrationQueriesListDiscountsQueryResult,
} from '../models/index';
import {
    FluentValidationResultsValidationFailureFromJSON,
    FluentValidationResultsValidationFailureToJSON,
    PromotionAdministrationCommandsCreateDiscountCommandResultFromJSON,
    PromotionAdministrationCommandsCreateDiscountCommandResultToJSON,
    PromotionAdministrationQueriesListDiscountsQueryResultFromJSON,
    PromotionAdministrationQueriesListDiscountsQueryResultToJSON,
} from '../models/index';

export interface ChangeDiscountActiveStateRequest {
    discountId?: number;
    newState?: boolean;
}

export interface CreateDiscountRequest {
    discountCode?: string;
    discountPercentage?: number;
}

export interface DeleteDiscountRequest {
    discountId?: number;
}

export interface ListDiscountsRequest {
    page?: number;
    itemPerPage?: number;
    searchKeyword?: string;
}

/**
 * 
 */
export class PromotionAdministrationApi extends runtime.BaseAPI {

    /**
     * İndirimin aktiflik durumunu değiştirmeyi sağlar
     */
    async changeDiscountActiveStateRaw(requestParameters: ChangeDiscountActiveStateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        if (requestParameters.discountId !== undefined) {
            queryParameters['DiscountId'] = requestParameters.discountId;
        }

        if (requestParameters.newState !== undefined) {
            queryParameters['NewState'] = requestParameters.newState;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/PromotionAdministration/ChangeDiscountActiveState`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * İndirimin aktiflik durumunu değiştirmeyi sağlar
     */
    async changeDiscountActiveState(requestParameters: ChangeDiscountActiveStateRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.changeDiscountActiveStateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Yeni indirim kodu oluşturmayı sağlar
     */
    async createDiscountRaw(requestParameters: CreateDiscountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PromotionAdministrationCommandsCreateDiscountCommandResult>> {
        const queryParameters: any = {};

        if (requestParameters.discountCode !== undefined) {
            queryParameters['DiscountCode'] = requestParameters.discountCode;
        }

        if (requestParameters.discountPercentage !== undefined) {
            queryParameters['DiscountPercentage'] = requestParameters.discountPercentage;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/PromotionAdministration/CreateDiscount`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PromotionAdministrationCommandsCreateDiscountCommandResultFromJSON(jsonValue));
    }

    /**
     * Yeni indirim kodu oluşturmayı sağlar
     */
    async createDiscount(requestParameters: CreateDiscountRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PromotionAdministrationCommandsCreateDiscountCommandResult> {
        const response = await this.createDiscountRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * İndirim kodunu silmeye yarar
     */
    async deleteDiscountRaw(requestParameters: DeleteDiscountRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        if (requestParameters.discountId !== undefined) {
            queryParameters['DiscountId'] = requestParameters.discountId;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/PromotionAdministration/DeleteDiscount`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * İndirim kodunu silmeye yarar
     */
    async deleteDiscount(requestParameters: DeleteDiscountRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.deleteDiscountRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * İndirim kodlarının listesini getirir
     */
    async listDiscountsRaw(requestParameters: ListDiscountsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PromotionAdministrationQueriesListDiscountsQueryResult>> {
        const queryParameters: any = {};

        if (requestParameters.page !== undefined) {
            queryParameters['Page'] = requestParameters.page;
        }

        if (requestParameters.itemPerPage !== undefined) {
            queryParameters['ItemPerPage'] = requestParameters.itemPerPage;
        }

        if (requestParameters.searchKeyword !== undefined) {
            queryParameters['SearchKeyword'] = requestParameters.searchKeyword;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/PromotionAdministration/ListDiscounts`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PromotionAdministrationQueriesListDiscountsQueryResultFromJSON(jsonValue));
    }

    /**
     * İndirim kodlarının listesini getirir
     */
    async listDiscounts(requestParameters: ListDiscountsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PromotionAdministrationQueriesListDiscountsQueryResult> {
        const response = await this.listDiscountsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
