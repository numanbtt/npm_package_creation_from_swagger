/* tslint:disable */
/* eslint-disable */
/**
 * Advancer
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.104
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  FluentValidationResultsValidationFailure,
  SchedulerCommandsSchedulerChange,
  SchedulerQueriesGetMyAvailableTimesQueryResult,
} from '../models/index';
import {
    FluentValidationResultsValidationFailureFromJSON,
    FluentValidationResultsValidationFailureToJSON,
    SchedulerCommandsSchedulerChangeFromJSON,
    SchedulerCommandsSchedulerChangeToJSON,
    SchedulerQueriesGetMyAvailableTimesQueryResultFromJSON,
    SchedulerQueriesGetMyAvailableTimesQueryResultToJSON,
} from '../models/index';

export interface ChangeMyAvailableTimesRequest {
    schedulerCommandsSchedulerChange?: Array<SchedulerCommandsSchedulerChange>;
}

/**
 * 
 */
export class SchedulerApi extends runtime.BaseAPI {

    /**
     * Öğretmenin müsaitlik vakitlerini değiştirebilmesini sağlar.
     */
    async changeMyAvailableTimesRaw(requestParameters: ChangeMyAvailableTimesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/Scheduler/ChangeMyAvailableTimes`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.schedulerCommandsSchedulerChange.map(SchedulerCommandsSchedulerChangeToJSON),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     * Öğretmenin müsaitlik vakitlerini değiştirebilmesini sağlar.
     */
    async changeMyAvailableTimes(requestParameters: ChangeMyAvailableTimesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.changeMyAvailableTimesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Öğretmenin kendi müsaitlik takvimini getirir.
     */
    async getMyAvailableTimesRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SchedulerQueriesGetMyAvailableTimesQueryResult>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/api/Scheduler/GetMyAvailableTimes`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SchedulerQueriesGetMyAvailableTimesQueryResultFromJSON(jsonValue));
    }

    /**
     * Öğretmenin kendi müsaitlik takvimini getirir.
     */
    async getMyAvailableTimes(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SchedulerQueriesGetMyAvailableTimesQueryResult> {
        const response = await this.getMyAvailableTimesRaw(initOverrides);
        return await response.value();
    }

}
